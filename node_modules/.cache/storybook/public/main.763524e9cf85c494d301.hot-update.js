"use strict";
globalThis["webpackHotUpdateuntitled"]("main",{

/***/ "./src/stories/Clock/clocl.stories.tsx":
/*!*********************************************!*\
  !*** ./src/stories/Clock/clocl.stories.tsx ***!
  \*********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Analog": () => (/* binding */ Analog),
/* harmony export */   "__namedExportsOrder": () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "justClock": () => (/* binding */ justClock)
/* harmony export */ });
/* harmony import */ var _clock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clock */ "./src/stories/Clock/clock.tsx");
/* harmony import */ var _AnalogClock__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AnalogClock */ "./src/stories/Clock/AnalogClock.tsx");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/viktoriakapinus/Documents/React_Kabzda/src/stories/Clock/clocl.stories.tsx",
  _s = __webpack_require__.$Refresh$.signature(),
  _s2 = __webpack_require__.$Refresh$.signature();
/* eslint-disable */
// @ts-nocheck
// @ts-ignore
var __STORY__ = "import {Clock} from \"./clock\";\nimport {AnalogClock} from \"./AnalogClock\";\nimport {useEffect, useState} from \"react\";\n\n\nexport default {\n    title: 'Clock ',\n\n}\n\n\nexport const   justClock = ()=> {\n\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\n\n\n    useEffect(() => {\n\n\n        const intervalID = setInterval(() => {\n            console.log('tick')\n            setDate(new Date())\n        }, 1000)\n\n        return ()=>clearInterval(intervalID)\n\n\n    }, [])\n\n\n    return (\n        <>\n            <Clock  data={date}/>\n\n        </>\n    )\n\n}\n\nexport const   Analog = ()=> {\n\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\n\n\n    useEffect(() => {\n\n\n        const intervalID = setInterval(() => {\n            console.log('tick')\n            setDate(new Date())\n        }, 1000)\n\n        return ()=>clearInterval(intervalID)\n\n\n    }, [])\n\n    return (\n        <>\n            <AnalogClock data={date}/>\n\n        </>\n    )\n\n}\n\n";
// @ts-ignore
var __LOCATIONS_MAP__ = {
  "justClock": {
    "startLoc": {
      "col": 27,
      "line": 12
    },
    "endLoc": {
      "col": 1,
      "line": 38
    },
    "startBody": {
      "col": 27,
      "line": 12
    },
    "endBody": {
      "col": 1,
      "line": 38
    }
  },
  "Analog": {
    "startLoc": {
      "col": 24,
      "line": 40
    },
    "endLoc": {
      "col": 1,
      "line": 65
    },
    "startBody": {
      "col": 24,
      "line": 40
    },
    "endBody": {
      "col": 1,
      "line": 65
    }
  }
};





/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Clock '
});
const justClock = () => {
  _s();
  const [date, setDate] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(new Date(Date.now()));
  (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {
    const intervalID = setInterval(() => {
      console.log('tick');
      setDate(new Date());
    }, 1000);
    return () => clearInterval(intervalID);
  }, []);
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment, {
    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_clock__WEBPACK_IMPORTED_MODULE_0__.Clock, {
      data: date
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 41,
      columnNumber: 13
    }, undefined)
  }, void 0, false);
};
_s(justClock, "ogCh04LpGKH3iDqlJhtxXNiG4lM=");
const Analog = () => {
  _s2();
  const [date, setDate] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(new Date(Date.now()));
  (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {
    const intervalID = setInterval(() => {
      console.log('tick');
      setDate(new Date());
    }, 1000);
    return () => clearInterval(intervalID);
  }, []);
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment, {
    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_AnalogClock__WEBPACK_IMPORTED_MODULE_1__.AnalogClock, {
      data: date
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 68,
      columnNumber: 13
    }, undefined)
  }, void 0, false);
};
_s2(Analog, "ogCh04LpGKH3iDqlJhtxXNiG4lM=");
_c = Analog;
justClock.parameters = {
  storySource: {
    source: "()=> {\n\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\n\n\n    useEffect(() => {\n\n\n        const intervalID = setInterval(() => {\n            console.log('tick')\n            setDate(new Date())\n        }, 1000)\n\n        return ()=>clearInterval(intervalID)\n\n\n    }, [])\n\n\n    return (\n        <>\n            <Clock  data={date}/>\n\n        </>\n    )\n\n}"
  },
  ...justClock.parameters
};
Analog.parameters = {
  storySource: {
    source: "()=> {\n\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\n\n\n    useEffect(() => {\n\n\n        const intervalID = setInterval(() => {\n            console.log('tick')\n            setDate(new Date())\n        }, 1000)\n\n        return ()=>clearInterval(intervalID)\n\n\n    }, [])\n\n    return (\n        <>\n            <AnalogClock data={date}/>\n\n        </>\n    )\n\n}"
  },
  ...Analog.parameters
};
var _c;
__webpack_require__.$Refresh$.register(_c, "Analog");
const __namedExportsOrder = ["justClock", "Analog"];

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

});
//# sourceMappingURL=main.763524e9cf85c494d301.hot-update.js.map