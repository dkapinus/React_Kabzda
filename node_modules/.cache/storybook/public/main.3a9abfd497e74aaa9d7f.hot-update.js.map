{"version":3,"file":"main.3a9abfd497e74aaa9d7f.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AAAA;AAMA;AAAA;AAGA;AAGA;AAGA;AACA;AACA;AACA;AAEA;AAGA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAzCA;AAAA;AAAA","sources":["webpack://untitled/./src/stories/Clock/clocl.stories.tsx","webpack://untitled/./src/stories/Clock/clock.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import {Clock} from \\\"./clock\\\";\\n\\nexport default {\\n    title: 'Clock ',\\n\\n}\\n\\n\\nexport const   justClock = ()=> {\\n    return (\\n        <>\\n            <Clock/>\\n            <Clock/>\\n        </>\\n    )\\n\\n}\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"justClock\":{\"startLoc\":{\"col\":27,\"line\":9},\"endLoc\":{\"col\":1,\"line\":17},\"startBody\":{\"col\":27,\"line\":9},\"endBody\":{\"col\":1,\"line\":17}}};\n    \nimport {Clock} from \"./clock\";\n\nexport default {\n    title: 'Clock ',\n\n}\n\n\nexport const   justClock = ()=> {\n    return (\n        <>\n            <Clock/>\n            <Clock/>\n        </>\n    )\n\n};\n\n\njustClock.parameters = { storySource: { source: \"()=> {\\n    return (\\n        <>\\n            <Clock/>\\n            <Clock/>\\n        </>\\n    )\\n\\n}\" }, ...justClock.parameters };","import React, {useEffect, useState} from \"react\";\n\n\n\n\n\nexport const Clock = () => {\n\n\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\n\n\n    useEffect(() => {\n\n\n        const intervalID = setInterval(() => {\n            console.log('tick')\n            setDate(new Date())\n        }, 1000)\n\n        return ()=>clearInterval(intervalID)\n\n\n    }, [])\n\n\n\n\n\n    let formatterTime = new Intl.DateTimeFormat(\"ru\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        second: \"2-digit\"\n    });\n\n    const stringTime = `${formatterTime.format(date)}`\n    return (\n        <div>\n\n            <span>\n                   {stringTime}\n                </span>\n\n\n\n        </div>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n"],"names":[],"sourceRoot":""}