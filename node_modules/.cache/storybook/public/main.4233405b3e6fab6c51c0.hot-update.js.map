{"version":3,"file":"main.4233405b3e6fab6c51c0.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAGA;AACA;AAEA;AAGA;AAAA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AAxBA;AA6BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://untitled/./src/ReactMemo/useEffect.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, {useEffect, useState} from 'react';\\n\\n\\nexport default {\\n    title: 'ResetUseEffect',\\n\\n}\\n\\n\\nexport const ResetUseEffect = () => {\\n    const [counter, setCounter] = useState(0)\\n\\n    console.log('SetTimeoutExample')\\n\\n    useEffect(() => {\\n  console.log('Effect ocurred')\\n\\n        return ()=> {\\n      console.log('Reset')\\n        }\\n    },[])\\n\\n\\n\\n    return (\\n        <>\\n\\n            <button onClick={() => setCounter(counter + 1)}>counter</button>\\n           Hello : {counter}\\n\\n\\n        </>\\n    )\\n}\\n\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"ResetUseEffect\":{\"startLoc\":{\"col\":30,\"line\":10},\"endLoc\":{\"col\":1,\"line\":34},\"startBody\":{\"col\":30,\"line\":10},\"endBody\":{\"col\":1,\"line\":34}}};\n    \nimport React, {useEffect, useState} from 'react';\n\n\nexport default {\n    title: 'ResetUseEffect',\n\n}\n\n\nexport const ResetUseEffect = () => {\n    const [counter, setCounter] = useState(0)\n\n    console.log('SetTimeoutExample')\n\n    useEffect(() => {\n  console.log('Effect ocurred')\n\n        return ()=> {\n      console.log('Reset')\n        }\n    },[])\n\n\n\n    return (\n        <>\n\n            <button onClick={() => setCounter(counter + 1)}>counter</button>\n           Hello : {counter}\n\n\n        </>\n    )\n};\n\n\n\n\nResetUseEffect.parameters = { storySource: { source: \"() => {\\n    const [counter, setCounter] = useState(0)\\n\\n    console.log('SetTimeoutExample')\\n\\n    useEffect(() => {\\n  console.log('Effect ocurred')\\n\\n        return ()=> {\\n      console.log('Reset')\\n        }\\n    },[])\\n\\n\\n\\n    return (\\n        <>\\n\\n            <button onClick={() => setCounter(counter + 1)}>counter</button>\\n           Hello : {counter}\\n\\n\\n        </>\\n    )\\n}\" }, ...ResetUseEffect.parameters };"],"names":[],"sourceRoot":""}