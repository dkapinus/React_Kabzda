{"version":3,"file":"main.7dfdfbecac8e6071ae9f.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAGA;AACA;AAEA;AAGA;AAAA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AA3BA;AA8BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://untitled/./src/ReactMemo/ReactUseMemo.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, {ChangeEvent, useState} from 'react';\\n\\n\\nexport default {\\n    title: 'React UseMemo',\\n\\n}\\n\\n\\nexport const Example = () => {\\n    const [a, setA] = useState<number>(5);\\n    const [b, setB] = useState<number>(5)\\n\\n\\n    let resultA = 1\\n    let resultB = 1\\n\\n    for (let i = 1; i <= a; i++) {\\n        resultA = resultA * i\\n    }\\n    for (let i = 1; i <= b; i++) {\\n        resultB = resultB * i\\n\\n    }\\n        return (\\n            <>\\n                <input value={a} onChange={(e) => setA(Number(e.currentTarget.value))}/>\\n                <input value={b} onChange={(e) => setB(Number(e.currentTarget.value))}/>\\n                <div>\\n                    result A: {resultA}\\n                </div>\\n                <div>\\n                    result B: {resultB}\\n                </div>\\n            </>\\n        )\\n    }\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Example\":{\"startLoc\":{\"col\":23,\"line\":10},\"endLoc\":{\"col\":5,\"line\":37},\"startBody\":{\"col\":23,\"line\":10},\"endBody\":{\"col\":5,\"line\":37}}};\n    \nimport React, {ChangeEvent, useState} from 'react';\n\n\nexport default {\n    title: 'React UseMemo',\n\n}\n\n\nexport const Example = () => {\n    const [a, setA] = useState<number>(5);\n    const [b, setB] = useState<number>(5)\n\n\n    let resultA = 1\n    let resultB = 1\n\n    for (let i = 1; i <= a; i++) {\n        resultA = resultA * i\n    }\n    for (let i = 1; i <= b; i++) {\n        resultB = resultB * i\n\n    }\n        return (\n            <>\n                <input value={a} onChange={(e) => setA(Number(e.currentTarget.value))}/>\n                <input value={b} onChange={(e) => setB(Number(e.currentTarget.value))}/>\n                <div>\n                    result A: {resultA}\n                </div>\n                <div>\n                    result B: {resultB}\n                </div>\n            </>\n        )\n    };\n\n\nExample.parameters = { storySource: { source: \"() => {\\n    const [a, setA] = useState<number>(5);\\n    const [b, setB] = useState<number>(5)\\n\\n\\n    let resultA = 1\\n    let resultB = 1\\n\\n    for (let i = 1; i <= a; i++) {\\n        resultA = resultA * i\\n    }\\n    for (let i = 1; i <= b; i++) {\\n        resultB = resultB * i\\n\\n    }\\n        return (\\n            <>\\n                <input value={a} onChange={(e) => setA(Number(e.currentTarget.value))}/>\\n                <input value={b} onChange={(e) => setB(Number(e.currentTarget.value))}/>\\n                <div>\\n                    result A: {resultA}\\n                </div>\\n                <div>\\n                    result B: {resultB}\\n                </div>\\n            </>\\n        )\\n    }\" }, ...Example.parameters };"],"names":[],"sourceRoot":""}