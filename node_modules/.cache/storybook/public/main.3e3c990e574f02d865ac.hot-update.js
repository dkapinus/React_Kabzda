"use strict";
globalThis["webpackHotUpdateuntitled"]("main",{

/***/ "./src/stories/clock.stories.tsx":
/*!***************************************!*\
  !*** ./src/stories/clock.stories.tsx ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Clock": () => (/* binding */ Clock),
/* harmony export */   "__namedExportsOrder": () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/viktoriakapinus/Documents/React_Kabzda/src/stories/clock.stories.tsx",
  _s = __webpack_require__.$Refresh$.signature();
/* eslint-disable */
// @ts-nocheck
// @ts-ignore
var __STORY__ = "import React, {useState} from \"react\";\n\nexport default {\n    title: 'Clock ',\n\n}\n\n\n\nexport const Clock = () => {\n    const [timerId, setTimerId] = useState<number | undefined>(undefined)\n\n    const [date, setDate] = useState<Date>(new Date(( Date.now())))\n\n    const [editMode,setEditMode]=useState(false)\n\n    const start = () => {\n        setTimerId(+setInterval(() => {\n            setDate(new Date().getSeconds(+1))\n        }, 1000))\n        setEditMode(true)\n    };\n\n\n    let formatterTime = new Intl.DateTimeFormat(\"ru\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        second: \"numeric\"\n    });\n\n\n\n    const stringTime = `${formatterTime.format(date)}`||<br/> // часы24:минуты:секунды (01:02:03)/(23:02:03)/(24:00:00)/(00:00:01) // пишут студенты\n\n\n\n    return (\n        <div >\n\n\n                <span >\n                    <strong>{stringTime}</strong>\n                </span>\n\n\n\n\n            <div >\n                <button\n\n                    disabled={editMode} // пишут студенты // задизэйблить если таймер запущен\n                    onClick={start}\n                >\n                    start\n                </button>\n\n            </div>\n        </div>\n    )\n}\n\n\n";
// @ts-ignore
var __LOCATIONS_MAP__ = {
  "Clock": {
    "startLoc": {
      "col": 21,
      "line": 10
    },
    "endLoc": {
      "col": 1,
      "line": 60
    },
    "startBody": {
      "col": 21,
      "line": 10
    },
    "endBody": {
      "col": 1,
      "line": 60
    }
  }
};


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Clock '
});
const Clock = () => {
  _s();
  const [timerId, setTimerId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(undefined);
  const [date, setDate] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(new Date(Date.now()));
  const [editMode, setEditMode] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const start = () => {
    setTimerId(+setInterval(() => {
      setDate(new Date().getSeconds(+1));
    }, 1000));
    setEditMode(true);
  };
  let formatterTime = new Intl.DateTimeFormat("ru", {
    hour: "numeric",
    minute: "numeric",
    second: "numeric"
  });
  const stringTime = `${formatterTime.format(date)}` || /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("br", {}, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 41,
    columnNumber: 57
  }, undefined); // часы24:минуты:секунды (01:02:03)/(23:02:03)/(24:00:00)/(00:00:01) // пишут студенты

  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("span", {
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("strong", {
        children: stringTime
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 50,
        columnNumber: 21
      }, undefined)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 49,
      columnNumber: 17
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("button", {
        disabled: editMode // пишут студенты // задизэйблить если таймер запущен
        ,
        onClick: start,
        children: "start"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 57,
        columnNumber: 17
      }, undefined)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 56,
      columnNumber: 13
    }, undefined)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 46,
    columnNumber: 9
  }, undefined);
};
_s(Clock, "aU0WbtnsEtQHxgbEvW1knkGpeoQ=");
_c = Clock;
Clock.parameters = {
  storySource: {
    source: "() => {\n    const [timerId, setTimerId] = useState<number | undefined>(undefined)\n\n    const [date, setDate] = useState<Date>(new Date(( Date.now())))\n\n    const [editMode,setEditMode]=useState(false)\n\n    const start = () => {\n        setTimerId(+setInterval(() => {\n            setDate(new Date().getSeconds(+1))\n        }, 1000))\n        setEditMode(true)\n    };\n\n\n    let formatterTime = new Intl.DateTimeFormat(\"ru\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        second: \"numeric\"\n    });\n\n\n\n    const stringTime = `${formatterTime.format(date)}`||<br/> // часы24:минуты:секунды (01:02:03)/(23:02:03)/(24:00:00)/(00:00:01) // пишут студенты\n\n\n\n    return (\n        <div >\n\n\n                <span >\n                    <strong>{stringTime}</strong>\n                </span>\n\n\n\n\n            <div >\n                <button\n\n                    disabled={editMode} // пишут студенты // задизэйблить если таймер запущен\n                    onClick={start}\n                >\n                    start\n                </button>\n\n            </div>\n        </div>\n    )\n}"
  },
  ...Clock.parameters
};
var _c;
__webpack_require__.$Refresh$.register(_c, "Clock");
const __namedExportsOrder = ["Clock"];

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

});
//# sourceMappingURL=main.3e3c990e574f02d865ac.hot-update.js.map