{"version":3,"file":"main.b27890224f034c15fcb1.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAMA;AAAA;AAEA;AAGA;AAGA;AACA;AACA;AACA;AAEA;AAGA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAxCA;AAAA;AAAA","sources":["webpack://untitled/./src/stories/Clock/AnalogClock.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\n\n\n\n\n\nexport const AnalogClock = () => {\n    \n    const [date, setDate] = useState<Date>(new Date((Date.now())))\n\n\n    useEffect(() => {\n\n\n        const intervalID = setInterval(() => {\n            console.log('tick')\n            setDate(new Date())\n        }, 1000)\n\n        return ()=>clearInterval(intervalID)\n\n\n    }, [])\n\n\n\n\n\n    let formatterTime = new Intl.DateTimeFormat(\"ru\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        second: \"2-digit\"\n    });\n\n    const stringTime = `${formatterTime.format(date)}`\n    return (\n        <div>\n\n            <span>\n                   {stringTime}\n                </span>\n\n\n\n        </div>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n"],"names":[],"sourceRoot":""}