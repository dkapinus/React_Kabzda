{"version":3,"file":"main.763524e9cf85c494d301.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AAEA;AAGA;AAAA;AAEA;AAGA;AAGA;AACA;AACA;AACA;AAEA;AAGA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAEA;AAAA;AAEA;AAGA;AAGA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAzBA;AA6BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://untitled/./src/stories/Clock/clocl.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import {Clock} from \\\"./clock\\\";\\nimport {AnalogClock} from \\\"./AnalogClock\\\";\\nimport {useEffect, useState} from \\\"react\\\";\\n\\n\\nexport default {\\n    title: 'Clock ',\\n\\n}\\n\\n\\nexport const   justClock = ()=> {\\n\\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\\n\\n\\n    useEffect(() => {\\n\\n\\n        const intervalID = setInterval(() => {\\n            console.log('tick')\\n            setDate(new Date())\\n        }, 1000)\\n\\n        return ()=>clearInterval(intervalID)\\n\\n\\n    }, [])\\n\\n\\n    return (\\n        <>\\n            <Clock  data={date}/>\\n\\n        </>\\n    )\\n\\n}\\n\\nexport const   Analog = ()=> {\\n\\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\\n\\n\\n    useEffect(() => {\\n\\n\\n        const intervalID = setInterval(() => {\\n            console.log('tick')\\n            setDate(new Date())\\n        }, 1000)\\n\\n        return ()=>clearInterval(intervalID)\\n\\n\\n    }, [])\\n\\n    return (\\n        <>\\n            <AnalogClock data={date}/>\\n\\n        </>\\n    )\\n\\n}\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"justClock\":{\"startLoc\":{\"col\":27,\"line\":12},\"endLoc\":{\"col\":1,\"line\":38},\"startBody\":{\"col\":27,\"line\":12},\"endBody\":{\"col\":1,\"line\":38}},\"Analog\":{\"startLoc\":{\"col\":24,\"line\":40},\"endLoc\":{\"col\":1,\"line\":65},\"startBody\":{\"col\":24,\"line\":40},\"endBody\":{\"col\":1,\"line\":65}}};\n    \nimport {Clock} from \"./clock\";\nimport {AnalogClock} from \"./AnalogClock\";\nimport {useEffect, useState} from \"react\";\n\n\nexport default {\n    title: 'Clock ',\n\n}\n\n\nexport const   justClock = ()=> {\n\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\n\n\n    useEffect(() => {\n\n\n        const intervalID = setInterval(() => {\n            console.log('tick')\n            setDate(new Date())\n        }, 1000)\n\n        return ()=>clearInterval(intervalID)\n\n\n    }, [])\n\n\n    return (\n        <>\n            <Clock  data={date}/>\n\n        </>\n    )\n\n};\n\nexport const   Analog = ()=> {\n\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\n\n\n    useEffect(() => {\n\n\n        const intervalID = setInterval(() => {\n            console.log('tick')\n            setDate(new Date())\n        }, 1000)\n\n        return ()=>clearInterval(intervalID)\n\n\n    }, [])\n\n    return (\n        <>\n            <AnalogClock data={date}/>\n\n        </>\n    )\n\n};\n\n\n\njustClock.parameters = { storySource: { source: \"()=> {\\n\\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\\n\\n\\n    useEffect(() => {\\n\\n\\n        const intervalID = setInterval(() => {\\n            console.log('tick')\\n            setDate(new Date())\\n        }, 1000)\\n\\n        return ()=>clearInterval(intervalID)\\n\\n\\n    }, [])\\n\\n\\n    return (\\n        <>\\n            <Clock  data={date}/>\\n\\n        </>\\n    )\\n\\n}\" }, ...justClock.parameters };\nAnalog.parameters = { storySource: { source: \"()=> {\\n\\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\\n\\n\\n    useEffect(() => {\\n\\n\\n        const intervalID = setInterval(() => {\\n            console.log('tick')\\n            setDate(new Date())\\n        }, 1000)\\n\\n        return ()=>clearInterval(intervalID)\\n\\n\\n    }, [])\\n\\n    return (\\n        <>\\n            <AnalogClock data={date}/>\\n\\n        </>\\n    )\\n\\n}\" }, ...Analog.parameters };"],"names":[],"sourceRoot":""}