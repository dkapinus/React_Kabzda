{"version":3,"file":"main.baf93a73ec7ee754ba77.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAPA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AAAA;AAiBA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAOA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAbA;AAAA;AAAA;AAAA","sources":["webpack://untitled/./src/selected.stories.tsx","webpack://untitled/./src/selected.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import  {useState} from \\\"react\\\";\\n\\nimport {action} from \\\"@storybook/addon-actions\\\";\\nimport {Selected} from \\\"./selected\\\";\\n\\n\\nexport default {\\n    title: 'Selected',\\n    component: Selected\\n}\\n\\nconst callback = action('On or Of click')\\nconst clickLi =action('click some li')\\n\\nexport const On = () => <Selected onclick={clickLi} collapsed={true} changeCollapsed={callback} title={'Menu'} items={[]}/>\\nexport const Off = () => <Selected onclick={clickLi} collapsed={false} changeCollapsed={callback} title={'Hello'}\\n                                    items={[{title: 'Vika', value: 1},\\n                                        {title: 'Dima', value: 2}, {\\n                                            title: 'Morty', value: 3},\\n                                        {title: 'Pysiaka', value: 4}]}/>\\n\\nexport const OnOffChange = () => {\\n    const [collapsed, setCollapsed] = useState(true)\\n    return (<Selected onclick={(id)=>alert(`user ${id}`)} collapsed={collapsed} changeCollapsed={() => setCollapsed(!collapsed)} title={'Users'}\\n                       items={[{title: 'Vika', value: 1},\\n                           {title: 'Dima', value: 2},\\n                           {title: 'Morty', value: 3},\\n                           {title: 'Pysiaka', value: 4}]}/>)\\n}\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"On\":{\"startLoc\":{\"col\":18,\"line\":15},\"endLoc\":{\"col\":123,\"line\":15},\"startBody\":{\"col\":18,\"line\":15},\"endBody\":{\"col\":123,\"line\":15}},\"Off\":{\"startLoc\":{\"col\":19,\"line\":16},\"endLoc\":{\"col\":72,\"line\":20},\"startBody\":{\"col\":19,\"line\":16},\"endBody\":{\"col\":72,\"line\":20}},\"OnOffChange\":{\"startLoc\":{\"col\":27,\"line\":22},\"endLoc\":{\"col\":1,\"line\":29},\"startBody\":{\"col\":27,\"line\":22},\"endBody\":{\"col\":1,\"line\":29}}};\n    \nimport  {useState} from \"react\";\n\nimport {action} from \"@storybook/addon-actions\";\nimport {Selected} from \"./selected\";\n\n\nexport default {\n    title: 'Selected',\n    component: Selected\n}\n\nconst callback = action('On or Of click')\nconst clickLi =action('click some li')\n\nexport const On = () => <Selected onclick={clickLi} collapsed={true} changeCollapsed={callback} title={'Menu'} items={[]}/>;\nexport const Off = () => <Selected onclick={clickLi} collapsed={false} changeCollapsed={callback} title={'Hello'}\n                                    items={[{title: 'Vika', value: 1},\n                                        {title: 'Dima', value: 2}, {\n                                            title: 'Morty', value: 3},\n                                        {title: 'Pysiaka', value: 4}]}/>;\n\nexport const OnOffChange = () => {\n    const [collapsed, setCollapsed] = useState(true)\n    return (<Selected onclick={(id)=>alert(`user ${id}`)} collapsed={collapsed} changeCollapsed={() => setCollapsed(!collapsed)} title={'Users'}\n                       items={[{title: 'Vika', value: 1},\n                           {title: 'Dima', value: 2},\n                           {title: 'Morty', value: 3},\n                           {title: 'Pysiaka', value: 4}]}/>)\n};\n\n\nOn.parameters = { storySource: { source: \"() => <Selected onclick={clickLi} collapsed={true} changeCollapsed={callback} title={'Menu'} items={[]}/>\" }, ...On.parameters };\nOff.parameters = { storySource: { source: \"() => <Selected onclick={clickLi} collapsed={false} changeCollapsed={callback} title={'Hello'}\\n                                    items={[{title: 'Vika', value: 1},\\n                                        {title: 'Dima', value: 2}, {\\n                                            title: 'Morty', value: 3},\\n                                        {title: 'Pysiaka', value: 4}]}/>\" }, ...Off.parameters };\nOnOffChange.parameters = { storySource: { source: \"() => {\\n    const [collapsed, setCollapsed] = useState(true)\\n    return (<Selected onclick={(id)=>alert(`user ${id}`)} collapsed={collapsed} changeCollapsed={() => setCollapsed(!collapsed)} title={'Users'}\\n                       items={[{title: 'Vika', value: 1},\\n                           {title: 'Dima', value: 2},\\n                           {title: 'Morty', value: 3},\\n                           {title: 'Pysiaka', value: 4}]}/>)\\n}\" }, ...OnOffChange.parameters };","import React from \"react\";\n\n\ntype ItemType = {\n    title:string,\n    value:any\n}\n\n\ntype AccordionType = {\n    title:string\n    changeCollapsed:()=>void\n    collapsed:boolean\n    items:ItemType[]\n    onclick:(value:any)=>void\n}\n\nexport function Selected (props:AccordionType){\n\n\n\n\n\n\n    return (<div>\n        <AccordionTitle title={props.title} onClick={()=>props.changeCollapsed()}/>\n\n\n        {props.collapsed &&<AccordionBody onclick={props.onclick} items={props.items} />}\n\n\n    </div>)\n\n\n}\n\ntype AccordionTitle = {\n    title:string;\n    onClick:()=>void\n\n}\n\nexport function AccordionTitle (props:AccordionTitle){\n    return (\n        <div>\n            <h3 onClick={()=>props.onClick()}>---{props.title}---</h3>\n\n\n        </div>\n    )\n}\n\ntype AccordionBodyType = {\n    items:ItemType[]\n    onclick:(value:any)=>void\n}\n\nexport function AccordionBody (props:AccordionBodyType){\n    return (\n        <div>\n\n            <ul>{props.items.map((i,index)=>{return(\n                <li key={index}  onClick={()=>props.onclick(i.value)}>{i.title}</li>\n\n            )})}\n\n            </ul>\n\n        </div>\n    )\n}\n\n"],"names":[],"sourceRoot":""}