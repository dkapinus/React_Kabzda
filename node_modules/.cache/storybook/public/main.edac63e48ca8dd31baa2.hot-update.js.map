{"version":3,"file":"main.edac63e48ca8dd31baa2.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAGA;AACA;AAEA;AAGA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AAlBA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAtGA;AAyGA;AAAA;AAAA","sources":["webpack://untitled/./src/ReactMemo/useState.stories.tsx","webpack://untitled/./src/stories/Clock/clock.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, {useEffect, useState} from 'react';\\n\\n\\nexport default {\\n    title: 'useState demo',\\n\\n}\\n\\n\\nexport const Example = () => {\\n    const [counter, setCounter] = useState<Date>(new Date( Date.now()));\\n    const [fake, setFake] = useState(0);\\n\\n    useEffect(() => {\\n    setInterval(()=>setCounter(counter))\\n    },[counter])\\n\\n\\n    return (\\n        <>\\n            <button onClick={() => setCounter(counter)}>coonter</button>\\n            <button onClick={() => setFake(fake + 1)}>fake</button>\\n            {counter} {fake}\\n\\n\\n        </>\\n    )\\n}\\n\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Example\":{\"startLoc\":{\"col\":23,\"line\":10},\"endLoc\":{\"col\":1,\"line\":28},\"startBody\":{\"col\":23,\"line\":10},\"endBody\":{\"col\":1,\"line\":28}}};\n    \nimport React, {useEffect, useState} from 'react';\n\n\nexport default {\n    title: 'useState demo',\n\n}\n\n\nexport const Example = () => {\n    const [counter, setCounter] = useState<Date>(new Date( Date.now()));\n    const [fake, setFake] = useState(0);\n\n    useEffect(() => {\n    setInterval(()=>setCounter(counter))\n    },[counter])\n\n\n    return (\n        <>\n            <button onClick={() => setCounter(counter)}>coonter</button>\n            <button onClick={() => setFake(fake + 1)}>fake</button>\n            {counter} {fake}\n\n\n        </>\n    )\n};\n\n\n\n\nExample.parameters = { storySource: { source: \"() => {\\n    const [counter, setCounter] = useState<Date>(new Date( Date.now()));\\n    const [fake, setFake] = useState(0);\\n\\n    useEffect(() => {\\n    setInterval(()=>setCounter(counter))\\n    },[counter])\\n\\n\\n    return (\\n        <>\\n            <button onClick={() => setCounter(counter)}>coonter</button>\\n            <button onClick={() => setFake(fake + 1)}>fake</button>\\n            {counter} {fake}\\n\\n\\n        </>\\n    )\\n}\" }, ...Example.parameters };","import React, {useState} from \"react\";\n\nfunction Clock() {\n    const [timerId, setTimerId] = useState<number | undefined>(undefined)\n    // for autotests // не менять // можно подсунуть в локалСторэдж нужную дату, чтоб увидеть как она отображается\n\n    const [show, setShow] = useState<boolean>(false)\n    const [editMode,setEditMode]=useState(false)\n\n    const start = () => {\n        setTimerId(+setInterval(() => {\n            setDate(new Date())\n        }, 1000))\n        setEditMode(true)\n    };\n\n\n\n\n    const stop = () => {\n        // пишут студенты // поставить часы на паузу, обнулить ид таймера (timerId <- undefined)\n        clearInterval(timerId);\n        setEditMode(false)\n\n    }\n\n\n\n    let formatterTime = new Intl.DateTimeFormat(\"ru\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        second: \"numeric\"\n    });\n\n    let formatterDate = new Intl.DateTimeFormat(\"ru\", {\n        day: \"numeric\",\n        month: \"numeric\",\n        year: \"numeric\",\n    });\n\n    let formatterWeekendDay = new Intl.DateTimeFormat(\"en\", {\n        weekday: \"long\",\n\n    });\n\n    let formatterMonth = new Intl.DateTimeFormat(\"en\", {\n        month: \"long\",\n\n    });\n\n    const stringTime = `${formatterTime.format(date)}`||<br/> // часы24:минуты:секунды (01:02:03)/(23:02:03)/(24:00:00)/(00:00:01) // пишут студенты\n    const stringDate = `${formatterDate.format(date)}`||<br/>  // день.месяц.год (01.02.2022) // пишут студенты, варианты 01.02.0123/01.02.-123/01.02.12345 не рассматриваем\n\n    // день недели на английском, месяц на английском (https://learn.javascript.ru/intl#intl-datetimeformat)\n    const stringDay =`${formatterWeekendDay.format(date)}`||<br/>\n    const stringMonth = `${formatterMonth.format(date)}`||<br/>\n\n    return (\n        <div className={s.clock}>\n            <div\n                id={'hw9-watch'}\n                className={s.watch}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n            >\n                <span id={'hw9-day'}>{stringDay}</span>,{' '}\n                <span id={'hw9-time'}>\n                    <strong>{stringTime}</strong>\n                </span>\n            </div>\n\n            <div id={'hw9-more'}>\n                <div className={s.more}>\n                    {show ? (\n                        <>\n                            <span id={'hw9-month'}>{stringMonth}</span>,{' '}\n                            <span id={'hw9-date'}>{stringDate}</span>\n                        </>\n                    ) : (\n                        <>\n                            <br/>\n                        </>\n                    )}\n                </div>\n            </div>\n\n            <div >\n                <button\n                    id={'hw9-button-start'}\n                    disabled={editMode} // пишут студенты // задизэйблить если таймер запущен\n                    onClick={start}\n                >\n                    start\n                </button>\n                <button\n\n                    disabled={!editMode} // пишут студенты // задизэйблить если таймер не запущен\n                    onClick={stop}\n                >\n                    stop\n                </button>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Clock"],"names":[],"sourceRoot":""}