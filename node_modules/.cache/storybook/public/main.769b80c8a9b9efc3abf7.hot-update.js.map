{"version":3,"file":"main.769b80c8a9b9efc3abf7.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAIA;AAAA;AAEA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AA1BA;AAgCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AACA;AAAA;AAAA;AAeA;AAAA;AAEA;AAGA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAKA;AAAA;AAjDA;AAAA;AAAA","sources":["webpack://untitled/./src/Colapsed/SelectedUseMemo.stories.tsx","webpack://untitled/./src/Colapsed/SelectedUseMemo.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"\\n\\nimport React, {useState} from \\\"react\\\";\\nimport s from \\\"./three.module.css\\\";\\nimport {ItemsType, SelectedUseMemo} from \\\"./SelectedUseMemo\\\";\\n\\nexport default {\\n    title: 'ThreeOptionSelect',\\n    component: SelectedUseMemo\\n}\\n\\nexport type FilterValueType ='Belarus'|'Ukraine'|'Spain'\\n\\nexport const SelectedMemo = ()=>{\\n\\n    const [value,SetValue]=useState(2)\\n\\n\\n    const [items,SetItems]=useState<ItemsType[]>([\\n        {value:1,title:'Minsk', country:'Belarus'},\\n        {value:2,title:'Brest', country:'Belarus'},\\n        {value:3,title:'Grodno', country:'Belarus'},\\n        {value:4,title:'Kiev',country:'Ukraine'},\\n        {value:5,title:'Lvov',country:'Ukraine'},\\n        {value:6,title:'Madrid',country:'Spain'},\\n        {value:7,title:'Barcelona',country:'Spain'}])\\n\\n\\n\\n    return (items.map((el)=>{\\n        const filter=items\\n            if(el.country==='Belarus'){filter=items.filter((el)=>el.country==='Belarus')}\\n            if(el.country==='Ukraine'){filter=items.filter((el)=>el.country==='Belarus')}\\n        return(\\n\\n            <SelectedUseMemo items ={filter}\\n                             value={value}/>\\n        )})\\n       )\\n}\\n\\n\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"SelectedMemo\":{\"startLoc\":{\"col\":28,\"line\":14},\"endLoc\":{\"col\":1,\"line\":40},\"startBody\":{\"col\":28,\"line\":14},\"endBody\":{\"col\":1,\"line\":40}}};\n    \n\n\nimport React, {useState} from \"react\";\nimport s from \"./three.module.css\";\nimport {ItemsType, SelectedUseMemo} from \"./SelectedUseMemo\";\n\nexport default {\n    title: 'ThreeOptionSelect',\n    component: SelectedUseMemo\n}\n\nexport type FilterValueType ='Belarus'|'Ukraine'|'Spain'\n\nexport const SelectedMemo = ()=>{\n\n    const [value,SetValue]=useState(2)\n\n\n    const [items,SetItems]=useState<ItemsType[]>([\n        {value:1,title:'Minsk', country:'Belarus'},\n        {value:2,title:'Brest', country:'Belarus'},\n        {value:3,title:'Grodno', country:'Belarus'},\n        {value:4,title:'Kiev',country:'Ukraine'},\n        {value:5,title:'Lvov',country:'Ukraine'},\n        {value:6,title:'Madrid',country:'Spain'},\n        {value:7,title:'Barcelona',country:'Spain'}])\n\n\n\n    return (items.map((el)=>{\n        const filter=items\n            if(el.country==='Belarus'){filter=items.filter((el)=>el.country==='Belarus')}\n            if(el.country==='Ukraine'){filter=items.filter((el)=>el.country==='Belarus')}\n        return(\n\n            <SelectedUseMemo items ={filter}\n                             value={value}/>\n        )})\n       )\n};\n\n\n\n\n\nSelectedMemo.parameters = { storySource: { source: \"()=>{\\n\\n    const [value,SetValue]=useState(2)\\n\\n\\n    const [items,SetItems]=useState<ItemsType[]>([\\n        {value:1,title:'Minsk', country:'Belarus'},\\n        {value:2,title:'Brest', country:'Belarus'},\\n        {value:3,title:'Grodno', country:'Belarus'},\\n        {value:4,title:'Kiev',country:'Ukraine'},\\n        {value:5,title:'Lvov',country:'Ukraine'},\\n        {value:6,title:'Madrid',country:'Spain'},\\n        {value:7,title:'Barcelona',country:'Spain'}])\\n\\n\\n\\n    return (items.map((el)=>{\\n        const filter=items\\n            if(el.country==='Belarus'){filter=items.filter((el)=>el.country==='Belarus')}\\n            if(el.country==='Ukraine'){filter=items.filter((el)=>el.country==='Belarus')}\\n        return(\\n\\n            <SelectedUseMemo items ={filter}\\n                             value={value}/>\\n        )})\\n       )\\n}\" }, ...SelectedMemo.parameters };","import React, {useState} from \"react\";\nimport s from \"./three.module.css\";\nimport {FilterValueType} from \"./SelectedUseMemo.stories\";\n\ntype ThreeOptionSelectType ={\n    items:ItemsType[]\n    value:number\n    filterCity:()=>void\n}\n\nexport type ItemsType = {\n    value:number\n    title:string\n    country:FilterValueType\n}\n\nexport const SelectedUseMemo = (props:ThreeOptionSelectType) => {\n\n    const TitleFind = props.items.find((el)=>el.value===props.value )\n\n\n    const [editMode,setEdit]=useState(false)\n\n    const ChangeStatus=() => {\n        setEdit(!editMode)\n    }\n\n    const [select,SetSelect]=useState('Minsk')\n\n    const [hover,SetHover]=useState(props.value)\n\n    const ChangeEnableSpan =(title:string)=> {\n        SetSelect(title)\n        setEdit(!editMode)\n    }\n\n// const onKeyUp = (e:KeyboardEvent<HTMLDivElement>)=> {\n//         for (let i=0;i<props.items.length;i++){}\n// }\nconst FilterCity =()=> {\n        props.filterCity()\n}\n    return (\n        <>\n            <div className={s.select} >\n\n                <span className={s.main} onDoubleClick={ChangeStatus}>{select}</span>\n                {editMode &&\n                    <div className={s.items}>\n                        {props.items.map((el)=>{\n                            return (\n                                <div className={hover ===el.value ? s.active :''}\n                                     onMouseEnter={()=>SetHover(el.value)}\n                                     onClick={()=>ChangeEnableSpan(el.title)} >{el.title}</div>\n                            )\n                        })}\n                        <button onClick={FilterCity}>Filter City for Country</button>\n                    </div>\n\n                }\n            </div>\n\n\n        </>\n    );\n};\n\n"],"names":[],"sourceRoot":""}