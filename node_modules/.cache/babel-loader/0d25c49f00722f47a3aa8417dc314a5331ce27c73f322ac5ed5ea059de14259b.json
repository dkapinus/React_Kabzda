{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/React_Kabzda/src/ReactMemo/ReactMemo.stories.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import React from 'react';\\nimport {useState} from \\\"react\\\";\\n\\n\\nexport default {\\n    title: 'React Memo',\\n\\n}\\n\\n\\ntype TableType = {\\n    user:Array<string>\\n}\\nexport const Table = (props:TableType) => {\\n    console.log('users')\\n    return <div>\\n\\n        {props.user.map((el,index)=>{\\n            return(\\n                <li key={index}>\\n                    {el}\\n                </li>\\n            )\\n        })}\\n    </div>\\n}\\nconst  TableSecret=React.memo(Table)\\n\\n\\nexport const ReactMemo = () => {\\n\\n    const [count, setCount] = useState(0)\\n\\n    const [user, setUser] = useState(['Dimych', 'Valera', 'Julian'])\\n\\n\\n    return (\\n\\n        <>\\n            <button onClick={()=>setCount(count+1)}>+</button>\\n            <Header count={count} />\\n            <TableSecret user={user} />\\n        </>\\n    )\\n}\\n\\n\\n\\ntype HeaderType = {\\n    count: number\\n\\n}\\n\\nexport const Header = (props: HeaderType) => {\\n\\n\\n\\n    return <div>\\n\\n        {props.count}\\n    </div>\\n}\";\n// @ts-ignore\nvar __LOCATIONS_MAP__ = {\n  \"Table\": {\n    \"startLoc\": {\n      \"col\": 21,\n      \"line\": 14\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 26\n    },\n    \"startBody\": {\n      \"col\": 21,\n      \"line\": 14\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 26\n    }\n  },\n  \"ReactMemo\": {\n    \"startLoc\": {\n      \"col\": 25,\n      \"line\": 30\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 45\n    },\n    \"startBody\": {\n      \"col\": 25,\n      \"line\": 30\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 45\n    }\n  },\n  \"Header\": {\n    \"startLoc\": {\n      \"col\": 22,\n      \"line\": 54\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 62\n    },\n    \"startBody\": {\n      \"col\": 22,\n      \"line\": 54\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 62\n    }\n  }\n};\nimport React from 'react';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'React Memo'\n};\nexport const Table = props => {\n  console.log('users');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.user.map((el, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: el\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n};\n_c = Table;\nconst TableSecret = /*#__PURE__*/React.memo(Table);\n_c2 = TableSecret;\nexport const ReactMemo = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const [user, setUser] = useState(['Dimych', 'Valera', 'Julian']);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      count: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableSecret, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ReactMemo, \"xG3SWfIYzXFuOocq1T9yrJyeMEo=\");\n_c3 = ReactMemo;\nexport const Header = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 12\n  }, this);\n};\n_c4 = Header;\nTable.parameters = {\n  storySource: {\n    source: \"(props:TableType) => {\\n    console.log('users')\\n    return <div>\\n\\n        {props.user.map((el,index)=>{\\n            return(\\n                <li key={index}>\\n                    {el}\\n                </li>\\n            )\\n        })}\\n    </div>\\n}\"\n  },\n  ...Table.parameters\n};\nReactMemo.parameters = {\n  storySource: {\n    source: \"() => {\\n\\n    const [count, setCount] = useState(0)\\n\\n    const [user, setUser] = useState(['Dimych', 'Valera', 'Julian'])\\n\\n\\n    return (\\n\\n        <>\\n            <button onClick={()=>setCount(count+1)}>+</button>\\n            <Header count={count} />\\n            <TableSecret user={user} />\\n        </>\\n    )\\n}\"\n  },\n  ...ReactMemo.parameters\n};\nHeader.parameters = {\n  storySource: {\n    source: \"(props: HeaderType) => {\\n\\n\\n\\n    return <div>\\n\\n        {props.count}\\n    </div>\\n}\"\n  },\n  ...Header.parameters\n};\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Table\");\n$RefreshReg$(_c2, \"TableSecret\");\n$RefreshReg$(_c3, \"ReactMemo\");\n$RefreshReg$(_c4, \"Header\");\nexport const __namedExportsOrder = [\"Table\", \"ReactMemo\", \"Header\"];","map":{"version":3,"names":["__STORY__","__LOCATIONS_MAP__","React","useState","title","Table","props","console","log","user","map","el","index","TableSecret","memo","ReactMemo","count","setCount","setUser","Header","parameters","storySource","source"],"sources":["/Users/viktoriakapinus/Documents/React_Kabzda/src/ReactMemo/ReactMemo.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport {useState} from \\\"react\\\";\\n\\n\\nexport default {\\n    title: 'React Memo',\\n\\n}\\n\\n\\ntype TableType = {\\n    user:Array<string>\\n}\\nexport const Table = (props:TableType) => {\\n    console.log('users')\\n    return <div>\\n\\n        {props.user.map((el,index)=>{\\n            return(\\n                <li key={index}>\\n                    {el}\\n                </li>\\n            )\\n        })}\\n    </div>\\n}\\nconst  TableSecret=React.memo(Table)\\n\\n\\nexport const ReactMemo = () => {\\n\\n    const [count, setCount] = useState(0)\\n\\n    const [user, setUser] = useState(['Dimych', 'Valera', 'Julian'])\\n\\n\\n    return (\\n\\n        <>\\n            <button onClick={()=>setCount(count+1)}>+</button>\\n            <Header count={count} />\\n            <TableSecret user={user} />\\n        </>\\n    )\\n}\\n\\n\\n\\ntype HeaderType = {\\n    count: number\\n\\n}\\n\\nexport const Header = (props: HeaderType) => {\\n\\n\\n\\n    return <div>\\n\\n        {props.count}\\n    </div>\\n}\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Table\":{\"startLoc\":{\"col\":21,\"line\":14},\"endLoc\":{\"col\":1,\"line\":26},\"startBody\":{\"col\":21,\"line\":14},\"endBody\":{\"col\":1,\"line\":26}},\"ReactMemo\":{\"startLoc\":{\"col\":25,\"line\":30},\"endLoc\":{\"col\":1,\"line\":45},\"startBody\":{\"col\":25,\"line\":30},\"endBody\":{\"col\":1,\"line\":45}},\"Header\":{\"startLoc\":{\"col\":22,\"line\":54},\"endLoc\":{\"col\":1,\"line\":62},\"startBody\":{\"col\":22,\"line\":54},\"endBody\":{\"col\":1,\"line\":62}}};\n    \nimport React from 'react';\nimport {useState} from \"react\";\n\n\nexport default {\n    title: 'React Memo',\n\n}\n\n\ntype TableType = {\n    user:Array<string>\n}\nexport const Table = (props:TableType) => {\n    console.log('users')\n    return <div>\n\n        {props.user.map((el,index)=>{\n            return(\n                <li key={index}>\n                    {el}\n                </li>\n            )\n        })}\n    </div>\n};\nconst  TableSecret=React.memo(Table)\n\n\nexport const ReactMemo = () => {\n\n    const [count, setCount] = useState(0)\n\n    const [user, setUser] = useState(['Dimych', 'Valera', 'Julian'])\n\n\n    return (\n\n        <>\n            <button onClick={()=>setCount(count+1)}>+</button>\n            <Header count={count} />\n            <TableSecret user={user} />\n        </>\n    )\n};\n\n\n\ntype HeaderType = {\n    count: number\n\n}\n\nexport const Header = (props: HeaderType) => {\n\n\n\n    return <div>\n\n        {props.count}\n    </div>\n};\n\n\nTable.parameters = { storySource: { source: \"(props:TableType) => {\\n    console.log('users')\\n    return <div>\\n\\n        {props.user.map((el,index)=>{\\n            return(\\n                <li key={index}>\\n                    {el}\\n                </li>\\n            )\\n        })}\\n    </div>\\n}\" }, ...Table.parameters };\nReactMemo.parameters = { storySource: { source: \"() => {\\n\\n    const [count, setCount] = useState(0)\\n\\n    const [user, setUser] = useState(['Dimych', 'Valera', 'Julian'])\\n\\n\\n    return (\\n\\n        <>\\n            <button onClick={()=>setCount(count+1)}>+</button>\\n            <Header count={count} />\\n            <TableSecret user={user} />\\n        </>\\n    )\\n}\" }, ...ReactMemo.parameters };\nHeader.parameters = { storySource: { source: \"(props: HeaderType) => {\\n\\n\\n\\n    return <div>\\n\\n        {props.count}\\n    </div>\\n}\" }, ...Header.parameters };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}