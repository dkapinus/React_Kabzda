{"ast":null,"code":"export const reducer = (state, action) => {\n  switch (action.type) {\n    case 'TRACK-URL-CHANGED':\n      return {\n        ...state,\n        trackUrl: action.url\n      };\n    case 'TRACK-MUTED':\n      return {\n        ...state,\n        volume: 0\n      };\n    case 'TRACK-REWOUND-TO-START':\n      return {\n        ...state,\n        currentPlayPosition: 0\n      };\n    default:\n      return state;\n  }\n};\nconst muteTrackAC = () => ({\n  type: 'TRACK-MUTED'\n});\nconst changeTrackAC = url => ({\n  type: 'TRACK-URL-CHANGED',\n  url\n});\n// перемотатьНаНачало:\nconst rewindToStart = () => ({\n  type: 'TRACK-REWOUND-TO-START'\n});\n\n// Какие типы должны быть вместо XXX, YYY и ZZZ?\n// Ответ дать через пробел, например:   'BLABLA' 'HEYНЕY' 'HIPHOP'","map":{"version":3,"names":["reducer","state","action","type","trackUrl","url","volume","currentPlayPosition","muteTrackAC","changeTrackAC","rewindToStart"],"sources":["/Users/viktoriakapinus/Documents/React_Kabzda/src/index.tsx"],"sourcesContent":["type StateType = {\n    volume: number // in percents\n    trackUrl: string // 'https://blabla.com/track01.mp3',\n    currentPlayPosition: number // milliseconds,\n}\n\nexport const reducer = (state: StateType, action: any) => {\n    switch (action.type) {\n        case'TRACK-URL-CHANGED' :\n            return {\n                ...state,\n                trackUrl: action.url\n            }\n        case 'TRACK-MUTED':\n            return {\n                ...state,\n                volume: 0\n            }\n        case 'TRACK-REWOUND-TO-START':\n            return {\n                ...state,\n                currentPlayPosition: 0\n            }\n        default:\n            return state\n    }\n}\n\nconst muteTrackAC = () => ({type: 'TRACK-MUTED'})\nconst changeTrackAC = (url: string) => ({type: 'TRACK-URL-CHANGED', url})\n// перемотатьНаНачало:\nconst rewindToStart = () => ({type: 'TRACK-REWOUND-TO-START'})\n\n// Какие типы должны быть вместо XXX, YYY и ZZZ?\n// Ответ дать через пробел, например:   'BLABLA' 'HEYНЕY' 'HIPHOP'\n\n\n\n\n\n\n\n\n"],"mappings":"AAMA,OAAO,MAAMA,OAAO,GAAG,CAACC,KAAgB,EAAEC,MAAW,KAAK;EACtD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAI,mBAAmB;MACnB,OAAO;QACH,GAAGF,KAAK;QACRG,QAAQ,EAAEF,MAAM,CAACG;MACrB,CAAC;IACL,KAAK,aAAa;MACd,OAAO;QACH,GAAGJ,KAAK;QACRK,MAAM,EAAE;MACZ,CAAC;IACL,KAAK,wBAAwB;MACzB,OAAO;QACH,GAAGL,KAAK;QACRM,mBAAmB,EAAE;MACzB,CAAC;IACL;MACI,OAAON,KAAK;EAAA;AAExB,CAAC;AAED,MAAMO,WAAW,GAAG,OAAO;EAACL,IAAI,EAAE;AAAa,CAAC,CAAC;AACjD,MAAMM,aAAa,GAAIJ,GAAW,KAAM;EAACF,IAAI,EAAE,mBAAmB;EAAEE;AAAG,CAAC,CAAC;AACzE;AACA,MAAMK,aAAa,GAAG,OAAO;EAACP,IAAI,EAAE;AAAwB,CAAC,CAAC;;AAE9D;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}