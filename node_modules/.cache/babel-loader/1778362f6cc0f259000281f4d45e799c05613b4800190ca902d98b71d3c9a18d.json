{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/React_Kabzda/src/stories/Clock/clock.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Clock = _ref => {\n  let {\n    data\n  } = _ref;\n  // const [date, setDate] = useState<Date>(new Date((Date.now())))\n  //\n  //\n  // useEffect(() => {\n  //\n  //\n  //     const intervalID = setInterval(() => {\n  //         console.log('tick')\n  //         setDate(new Date())\n  //     }, 1000)\n  //\n  //     return ()=>clearInterval(intervalID)\n  //\n  //\n  // }, [])\n\n  let formatterTime = new Intl.DateTimeFormat(\"ru\", {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\"\n  });\n  const stringTime = `${formatterTime.format(data)}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: stringTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_c = Clock;\nvar _c;\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"names":["React","Clock","data","formatterTime","Intl","DateTimeFormat","hour","minute","second","stringTime","format"],"sources":["/Users/viktoriakapinus/Documents/React_Kabzda/src/stories/Clock/clock.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\n\n\ntype ClockType = {\n    data:Date\n}\n\n\n\nexport const Clock:React.FC<ClockType> = ({data}) => {\n\n\n    // const [date, setDate] = useState<Date>(new Date((Date.now())))\n    //\n    //\n    // useEffect(() => {\n    //\n    //\n    //     const intervalID = setInterval(() => {\n    //         console.log('tick')\n    //         setDate(new Date())\n    //     }, 1000)\n    //\n    //     return ()=>clearInterval(intervalID)\n    //\n    //\n    // }, [])\n\n\n\n\n    let formatterTime = new Intl.DateTimeFormat(\"ru\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        second: \"2-digit\"\n    });\n\n    const stringTime = `${formatterTime.format(data)}`\n    return (\n        <div>\n\n            <span>\n                   {stringTime}\n                </span>\n\n\n\n        </div>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAA6B,OAAO;AAAC;AASjD,OAAO,MAAMC,KAAyB,GAAG,QAAY;EAAA,IAAX;IAACC;EAAI,CAAC;EAG5C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAKA,IAAIC,aAAa,GAAG,IAAIC,IAAI,CAACC,cAAc,CAAC,IAAI,EAAE;IAC9CC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,UAAU,GAAI,GAAEN,aAAa,CAACO,MAAM,CAACR,IAAI,CAAE,EAAC;EAClD,oBACI;IAAA,uBAEI;MAAA,UACQO;IAAU;MAAA;MAAA;MAAA;IAAA;EACP;IAAA;IAAA;IAAA;EAAA,QAIT;AAEd,CAAC;AAAA,KAxCYR,KAAyB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}