{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/React_Kabzda/src/stories/Clock/clock.stories.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import React, {useEffect, useState} from \\\"react\\\";\\nimport s from \\\"./clock.module.css\\\"\\n\\nexport default {\\n    title: 'Clock ',\\n\\n}\\n\\n\\nexport const Clock = () => {\\n\\n\\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\\n\\n\\n    useEffect(() => {\\n\\n\\n        const intervalID = setInterval(() => {\\n            console.log('tick')\\n            setDate(new Date())\\n        }, 1000)\\n\\n        return ()=>clearInterval(intervalID)\\n\\n\\n    }, [])\\n\\n\\n\\n\\n\\n    let formatterTime = new Intl.DateTimeFormat(\\\"ru\\\", {\\n        hour: \\\"2-digit\\\",\\n        minute: \\\"2-digit\\\",\\n        second: \\\"2-digit\\\"\\n    });\\n\\n    const stringTime = `${formatterTime.format(date)}`\\n    return (\\n        <div>\\n\\n            <span>\\n                   {stringTime}\\n                </span>\\n\\n\\n\\n        </div>\\n    )\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\";\n// @ts-ignore\nvar __LOCATIONS_MAP__ = {\n  \"Clock\": {\n    \"startLoc\": {\n      \"col\": 21,\n      \"line\": 10\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 51\n    },\n    \"startBody\": {\n      \"col\": 21,\n      \"line\": 10\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 51\n    }\n  }\n};\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'Clock '\n};\nexport const Clock = () => {\n  _s();\n  const [date, setDate] = useState(new Date(Date.now()));\n  useEffect(() => {\n    const intervalID = setInterval(() => {\n      console.log('tick');\n      setDate(new Date());\n    }, 1000);\n    return () => clearInterval(intervalID);\n  }, []);\n  let formatterTime = new Intl.DateTimeFormat(\"ru\", {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\"\n  });\n  const stringTime = `${formatterTime.format(date)}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: stringTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Clock, \"ogCh04LpGKH3iDqlJhtxXNiG4lM=\");\n_c = Clock;\nClock.parameters = {\n  storySource: {\n    source: \"() => {\\n\\n\\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\\n\\n\\n    useEffect(() => {\\n\\n\\n        const intervalID = setInterval(() => {\\n            console.log('tick')\\n            setDate(new Date())\\n        }, 1000)\\n\\n        return ()=>clearInterval(intervalID)\\n\\n\\n    }, [])\\n\\n\\n\\n\\n\\n    let formatterTime = new Intl.DateTimeFormat(\\\"ru\\\", {\\n        hour: \\\"2-digit\\\",\\n        minute: \\\"2-digit\\\",\\n        second: \\\"2-digit\\\"\\n    });\\n\\n    const stringTime = `${formatterTime.format(date)}`\\n    return (\\n        <div>\\n\\n            <span>\\n                   {stringTime}\\n                </span>\\n\\n\\n\\n        </div>\\n    )\\n}\"\n  },\n  ...Clock.parameters\n};\nvar _c;\n$RefreshReg$(_c, \"Clock\");\nexport const __namedExportsOrder = [\"Clock\"];","map":{"version":3,"names":["__STORY__","__LOCATIONS_MAP__","React","useEffect","useState","title","Clock","date","setDate","Date","now","intervalID","setInterval","console","log","clearInterval","formatterTime","Intl","DateTimeFormat","hour","minute","second","stringTime","format","parameters","storySource","source"],"sources":["/Users/viktoriakapinus/Documents/React_Kabzda/src/stories/Clock/clock.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, {useEffect, useState} from \\\"react\\\";\\nimport s from \\\"./clock.module.css\\\"\\n\\nexport default {\\n    title: 'Clock ',\\n\\n}\\n\\n\\nexport const Clock = () => {\\n\\n\\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\\n\\n\\n    useEffect(() => {\\n\\n\\n        const intervalID = setInterval(() => {\\n            console.log('tick')\\n            setDate(new Date())\\n        }, 1000)\\n\\n        return ()=>clearInterval(intervalID)\\n\\n\\n    }, [])\\n\\n\\n\\n\\n\\n    let formatterTime = new Intl.DateTimeFormat(\\\"ru\\\", {\\n        hour: \\\"2-digit\\\",\\n        minute: \\\"2-digit\\\",\\n        second: \\\"2-digit\\\"\\n    });\\n\\n    const stringTime = `${formatterTime.format(date)}`\\n    return (\\n        <div>\\n\\n            <span>\\n                   {stringTime}\\n                </span>\\n\\n\\n\\n        </div>\\n    )\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Clock\":{\"startLoc\":{\"col\":21,\"line\":10},\"endLoc\":{\"col\":1,\"line\":51},\"startBody\":{\"col\":21,\"line\":10},\"endBody\":{\"col\":1,\"line\":51}}};\n    \nimport React, {useEffect, useState} from \"react\";\nimport s from \"./clock.module.css\"\n\nexport default {\n    title: 'Clock ',\n\n}\n\n\nexport const Clock = () => {\n\n\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\n\n\n    useEffect(() => {\n\n\n        const intervalID = setInterval(() => {\n            console.log('tick')\n            setDate(new Date())\n        }, 1000)\n\n        return ()=>clearInterval(intervalID)\n\n\n    }, [])\n\n\n\n\n\n    let formatterTime = new Intl.DateTimeFormat(\"ru\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        second: \"2-digit\"\n    });\n\n    const stringTime = `${formatterTime.format(date)}`\n    return (\n        <div>\n\n            <span>\n                   {stringTime}\n                </span>\n\n\n\n        </div>\n    )\n};\n\n\n\n\n\n\n\n\n\n\nClock.parameters = { storySource: { source: \"() => {\\n\\n\\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\\n\\n\\n    useEffect(() => {\\n\\n\\n        const intervalID = setInterval(() => {\\n            console.log('tick')\\n            setDate(new Date())\\n        }, 1000)\\n\\n        return ()=>clearInterval(intervalID)\\n\\n\\n    }, [])\\n\\n\\n\\n\\n\\n    let formatterTime = new Intl.DateTimeFormat(\\\"ru\\\", {\\n        hour: \\\"2-digit\\\",\\n        minute: \\\"2-digit\\\",\\n        second: \\\"2-digit\\\"\\n    });\\n\\n    const stringTime = `${formatterTime.format(date)}`\\n    return (\\n        <div>\\n\\n            <span>\\n                   {stringTime}\\n                </span>\\n\\n\\n\\n        </div>\\n    )\\n}\" }, ...Clock.parameters };"],"mappings":";;AACI;AACA;AACA;AACA,IAAIA,SAAS,GAAG,q1BAAq1B;AACr2B;AACA,IAAIC,iBAAiB,GAAG;EAAC,OAAO,EAAC;IAAC,UAAU,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,QAAQ,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,WAAW,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,SAAS,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE;EAAC;AAAC,CAAC;AAEnK,OAAOC,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC;AAGjD,eAAe;EACXC,KAAK,EAAE;AAEX,CAAC;AAGD,OAAO,MAAMC,KAAK,GAAG,MAAM;EAAA;EAGvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAO,IAAIK,IAAI,CAAEA,IAAI,CAACC,GAAG,EAAE,CAAE,CAAC;EAG9DP,SAAS,CAAC,MAAM;IAGZ,MAAMQ,UAAU,GAAGC,WAAW,CAAC,MAAM;MACjCC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBN,OAAO,CAAC,IAAIC,IAAI,EAAE,CAAC;IACvB,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAIM,aAAa,CAACJ,UAAU,CAAC;EAGxC,CAAC,EAAE,EAAE,CAAC;EAMN,IAAIK,aAAa,GAAG,IAAIC,IAAI,CAACC,cAAc,CAAC,IAAI,EAAE;IAC9CC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,UAAU,GAAI,GAAEN,aAAa,CAACO,MAAM,CAAChB,IAAI,CAAE,EAAC;EAClD,oBACI;IAAA,uBAEI;MAAA,UACQe;IAAU;MAAA;MAAA;MAAA;IAAA;EACP;IAAA;IAAA;IAAA;EAAA,QAIT;AAEd,CAAC;AAAC,GAzCWhB,KAAK;AAAA,KAALA,KAAK;AAoDlBA,KAAK,CAACkB,UAAU,GAAG;EAAEC,WAAW,EAAE;IAAEC,MAAM,EAAE;EAAiqB,CAAC;EAAE,GAAGpB,KAAK,CAACkB;AAAW,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}