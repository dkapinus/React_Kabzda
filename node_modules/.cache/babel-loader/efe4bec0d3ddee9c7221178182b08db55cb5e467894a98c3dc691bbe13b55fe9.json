{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/React_Kabzda/src/stories/Clock/clock.stories.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"// import React, {useEffect, useState} from \\\"react\\\";\\n// import s from \\\"./clock.module.css\\\"\\n//\\n// export default {\\n//     title: 'Clock ',\\n//\\n// }\\n//\\n//\\n// export const Clock = () => {\\n//\\n//\\n//     const [date, setDate] = useState<Date>(new Date((Date.now())))\\n//\\n//\\n//     useEffect(() => {\\n//\\n//\\n//         const intervalID = setInterval(() => {\\n//             console.log('tick')\\n//             setDate(new Date())\\n//         }, 1000)\\n//\\n//         return ()=>clearInterval(intervalID)\\n//\\n//\\n//     }, [])\\n//\\n//\\n//\\n//\\n//\\n//     let formatterTime = new Intl.DateTimeFormat(\\\"ru\\\", {\\n//         hour: \\\"2-digit\\\",\\n//         minute: \\\"2-digit\\\",\\n//         second: \\\"2-digit\\\"\\n//     });\\n//\\n//     const stringTime = `${formatterTime.format(date)}`\\n//     return (\\n//         <div>\\n//\\n//             <span>\\n//                    {stringTime}\\n//                 </span>\\n//\\n//\\n//\\n//         </div>\\n//     )\\n// }\\n//\\n//\\nimport React, { useState, useEffect } from 'react';\\nimport './Clock.css';\\n\\nexport default {\\n    title: 'Clock ',\\n\\n}\\n\\nexport function Clock() {\\n    const [hourDegrees, setHourDegrees] = useState(0);\\n    const [minuteDegrees, setMinuteDegrees] = useState(0);\\n\\n    useEffect(() => {\\n        const intervalId = setInterval(() => {\\n            const now = new Date();\\n            const hours = now.getHours();\\n            const minutes = now.getMinutes();\\n            const hourDegrees = ((hours / 12) * 360) + ((minutes / 60) * 30) + 90;\\n            const minuteDegrees = ((minutes / 60) * 360) + 90;\\n            setHourDegrees(hourDegrees);\\n            setMinuteDegrees(minuteDegrees);\\n        }, 1000);\\n        return () => clearInterval(intervalId);\\n    }, []);\\n\\n    return (\\n        <div className=\\\"clock\\\">\\n            <div className=\\\"hour-hand\\\" style={{ transform: `rotate(${hourDegrees}deg)` }}></div>\\n            <div className=\\\"minute-hand\\\" style={{ transform: `rotate(${minuteDegrees}deg)` }}></div>\\n        </div>\\n    );\\n}\\n\\n\\n\\n\\n\\n\\n\";\n// @ts-ignore\nvar __LOCATIONS_MAP__ = {\n  \"Clock\": {\n    \"startLoc\": {\n      \"col\": 7,\n      \"line\": 62\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 85\n    },\n    \"startBody\": {\n      \"col\": 7,\n      \"line\": 62\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 85\n    }\n  }\n};\n\n// import React, {useEffect, useState} from \"react\";\n// import s from \"./clock.module.css\"\n//\n// export default {\n//     title: 'Clock ',\n//\n// }\n//\n//\n// export const Clock = () => {\n//\n//\n//     const [date, setDate] = useState<Date>(new Date((Date.now())))\n//\n//\n//     useEffect(() => {\n//\n//\n//         const intervalID = setInterval(() => {\n//             console.log('tick')\n//             setDate(new Date())\n//         }, 1000)\n//\n//         return ()=>clearInterval(intervalID)\n//\n//\n//     }, [])\n//\n//\n//\n//\n//\n//     let formatterTime = new Intl.DateTimeFormat(\"ru\", {\n//         hour: \"2-digit\",\n//         minute: \"2-digit\",\n//         second: \"2-digit\"\n//     });\n//\n//     const stringTime = `${formatterTime.format(date)}`\n//     return (\n//         <div>\n//\n//             <span>\n//                    {stringTime}\n//                 </span>\n//\n//\n//\n//         </div>\n//     )\n// }\n//\n//\nimport React, { useState, useEffect } from 'react';\nimport './Clock.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'Clock '\n};\nexport const Clock = function Clock() {\n  _s();\n  const [hourDegrees, setHourDegrees] = useState(0);\n  const [minuteDegrees, setMinuteDegrees] = useState(0);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const now = new Date();\n      const hours = now.getHours();\n      const minutes = now.getMinutes();\n      const hourDegrees = hours / 12 * 360 + minutes / 60 * 30 + 90;\n      const minuteDegrees = minutes / 60 * 360 + 90;\n      setHourDegrees(hourDegrees);\n      setMinuteDegrees(minuteDegrees);\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clock\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hour-hand\",\n      style: {\n        transform: `rotate(${hourDegrees}deg)`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"minute-hand\",\n      style: {\n        transform: `rotate(${minuteDegrees}deg)`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(Clock, \"bHcJvumXXteuxrEgWMM+suuQEp4=\");\n_c = Clock;\nClock.parameters = {\n  storySource: {\n    source: \"function Clock() {\\n    const [hourDegrees, setHourDegrees] = useState(0);\\n    const [minuteDegrees, setMinuteDegrees] = useState(0);\\n\\n    useEffect(() => {\\n        const intervalId = setInterval(() => {\\n            const now = new Date();\\n            const hours = now.getHours();\\n            const minutes = now.getMinutes();\\n            const hourDegrees = ((hours / 12) * 360) + ((minutes / 60) * 30) + 90;\\n            const minuteDegrees = ((minutes / 60) * 360) + 90;\\n            setHourDegrees(hourDegrees);\\n            setMinuteDegrees(minuteDegrees);\\n        }, 1000);\\n        return () => clearInterval(intervalId);\\n    }, []);\\n\\n    return (\\n        <div className=\\\"clock\\\">\\n            <div className=\\\"hour-hand\\\" style={{ transform: `rotate(${hourDegrees}deg)` }}></div>\\n            <div className=\\\"minute-hand\\\" style={{ transform: `rotate(${minuteDegrees}deg)` }}></div>\\n        </div>\\n    );\\n}\"\n  },\n  ...Clock.parameters\n};\nvar _c;\n$RefreshReg$(_c, \"Clock\");\nexport const __namedExportsOrder = [\"Clock\"];","map":{"version":3,"names":["__STORY__","__LOCATIONS_MAP__","React","useState","useEffect","title","Clock","hourDegrees","setHourDegrees","minuteDegrees","setMinuteDegrees","intervalId","setInterval","now","Date","hours","getHours","minutes","getMinutes","clearInterval","transform","parameters","storySource","source"],"sources":["/Users/viktoriakapinus/Documents/React_Kabzda/src/stories/Clock/clock.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"// import React, {useEffect, useState} from \\\"react\\\";\\n// import s from \\\"./clock.module.css\\\"\\n//\\n// export default {\\n//     title: 'Clock ',\\n//\\n// }\\n//\\n//\\n// export const Clock = () => {\\n//\\n//\\n//     const [date, setDate] = useState<Date>(new Date((Date.now())))\\n//\\n//\\n//     useEffect(() => {\\n//\\n//\\n//         const intervalID = setInterval(() => {\\n//             console.log('tick')\\n//             setDate(new Date())\\n//         }, 1000)\\n//\\n//         return ()=>clearInterval(intervalID)\\n//\\n//\\n//     }, [])\\n//\\n//\\n//\\n//\\n//\\n//     let formatterTime = new Intl.DateTimeFormat(\\\"ru\\\", {\\n//         hour: \\\"2-digit\\\",\\n//         minute: \\\"2-digit\\\",\\n//         second: \\\"2-digit\\\"\\n//     });\\n//\\n//     const stringTime = `${formatterTime.format(date)}`\\n//     return (\\n//         <div>\\n//\\n//             <span>\\n//                    {stringTime}\\n//                 </span>\\n//\\n//\\n//\\n//         </div>\\n//     )\\n// }\\n//\\n//\\nimport React, { useState, useEffect } from 'react';\\nimport './Clock.css';\\n\\nexport default {\\n    title: 'Clock ',\\n\\n}\\n\\nexport function Clock() {\\n    const [hourDegrees, setHourDegrees] = useState(0);\\n    const [minuteDegrees, setMinuteDegrees] = useState(0);\\n\\n    useEffect(() => {\\n        const intervalId = setInterval(() => {\\n            const now = new Date();\\n            const hours = now.getHours();\\n            const minutes = now.getMinutes();\\n            const hourDegrees = ((hours / 12) * 360) + ((minutes / 60) * 30) + 90;\\n            const minuteDegrees = ((minutes / 60) * 360) + 90;\\n            setHourDegrees(hourDegrees);\\n            setMinuteDegrees(minuteDegrees);\\n        }, 1000);\\n        return () => clearInterval(intervalId);\\n    }, []);\\n\\n    return (\\n        <div className=\\\"clock\\\">\\n            <div className=\\\"hour-hand\\\" style={{ transform: `rotate(${hourDegrees}deg)` }}></div>\\n            <div className=\\\"minute-hand\\\" style={{ transform: `rotate(${minuteDegrees}deg)` }}></div>\\n        </div>\\n    );\\n}\\n\\n\\n\\n\\n\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Clock\":{\"startLoc\":{\"col\":7,\"line\":62},\"endLoc\":{\"col\":1,\"line\":85},\"startBody\":{\"col\":7,\"line\":62},\"endBody\":{\"col\":1,\"line\":85}}};\n    \n// import React, {useEffect, useState} from \"react\";\n// import s from \"./clock.module.css\"\n//\n// export default {\n//     title: 'Clock ',\n//\n// }\n//\n//\n// export const Clock = () => {\n//\n//\n//     const [date, setDate] = useState<Date>(new Date((Date.now())))\n//\n//\n//     useEffect(() => {\n//\n//\n//         const intervalID = setInterval(() => {\n//             console.log('tick')\n//             setDate(new Date())\n//         }, 1000)\n//\n//         return ()=>clearInterval(intervalID)\n//\n//\n//     }, [])\n//\n//\n//\n//\n//\n//     let formatterTime = new Intl.DateTimeFormat(\"ru\", {\n//         hour: \"2-digit\",\n//         minute: \"2-digit\",\n//         second: \"2-digit\"\n//     });\n//\n//     const stringTime = `${formatterTime.format(date)}`\n//     return (\n//         <div>\n//\n//             <span>\n//                    {stringTime}\n//                 </span>\n//\n//\n//\n//         </div>\n//     )\n// }\n//\n//\nimport React, { useState, useEffect } from 'react';\nimport './Clock.css';\n\nexport default {\n    title: 'Clock ',\n\n}\n\nexport const Clock = function Clock() {\n    const [hourDegrees, setHourDegrees] = useState(0);\n    const [minuteDegrees, setMinuteDegrees] = useState(0);\n\n    useEffect(() => {\n        const intervalId = setInterval(() => {\n            const now = new Date();\n            const hours = now.getHours();\n            const minutes = now.getMinutes();\n            const hourDegrees = ((hours / 12) * 360) + ((minutes / 60) * 30) + 90;\n            const minuteDegrees = ((minutes / 60) * 360) + 90;\n            setHourDegrees(hourDegrees);\n            setMinuteDegrees(minuteDegrees);\n        }, 1000);\n        return () => clearInterval(intervalId);\n    }, []);\n\n    return (\n        <div className=\"clock\">\n            <div className=\"hour-hand\" style={{ transform: `rotate(${hourDegrees}deg)` }}></div>\n            <div className=\"minute-hand\" style={{ transform: `rotate(${minuteDegrees}deg)` }}></div>\n        </div>\n    );\n};\n\n\n\n\n\n\n\n\nClock.parameters = { storySource: { source: \"function Clock() {\\n    const [hourDegrees, setHourDegrees] = useState(0);\\n    const [minuteDegrees, setMinuteDegrees] = useState(0);\\n\\n    useEffect(() => {\\n        const intervalId = setInterval(() => {\\n            const now = new Date();\\n            const hours = now.getHours();\\n            const minutes = now.getMinutes();\\n            const hourDegrees = ((hours / 12) * 360) + ((minutes / 60) * 30) + 90;\\n            const minuteDegrees = ((minutes / 60) * 360) + 90;\\n            setHourDegrees(hourDegrees);\\n            setMinuteDegrees(minuteDegrees);\\n        }, 1000);\\n        return () => clearInterval(intervalId);\\n    }, []);\\n\\n    return (\\n        <div className=\\\"clock\\\">\\n            <div className=\\\"hour-hand\\\" style={{ transform: `rotate(${hourDegrees}deg)` }}></div>\\n            <div className=\\\"minute-hand\\\" style={{ transform: `rotate(${minuteDegrees}deg)` }}></div>\\n        </div>\\n    );\\n}\" }, ...Clock.parameters };"],"mappings":";;AACI;AACA;AACA;AACA,IAAIA,SAAS,GAAG,sgEAAsgE;AACthE;AACA,IAAIC,iBAAiB,GAAG;EAAC,OAAO,EAAC;IAAC,UAAU,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,QAAQ,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,WAAW,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,SAAS,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE;EAAC;AAAC,CAAC;;AAEjK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,aAAa;AAAC;AAErB,eAAe;EACXC,KAAK,EAAE;AAEX,CAAC;AAED,OAAO,MAAMC,KAAK,GAAG,SAASA,KAAK,GAAG;EAAA;EAClC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACM,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAErDC,SAAS,CAAC,MAAM;IACZ,MAAMO,UAAU,GAAGC,WAAW,CAAC,MAAM;MACjC,MAAMC,GAAG,GAAG,IAAIC,IAAI,EAAE;MACtB,MAAMC,KAAK,GAAGF,GAAG,CAACG,QAAQ,EAAE;MAC5B,MAAMC,OAAO,GAAGJ,GAAG,CAACK,UAAU,EAAE;MAChC,MAAMX,WAAW,GAAKQ,KAAK,GAAG,EAAE,GAAI,GAAG,GAAME,OAAO,GAAG,EAAE,GAAI,EAAG,GAAG,EAAE;MACrE,MAAMR,aAAa,GAAKQ,OAAO,GAAG,EAAE,GAAI,GAAG,GAAI,EAAE;MACjDT,cAAc,CAACD,WAAW,CAAC;MAC3BG,gBAAgB,CAACD,aAAa,CAAC;IACnC,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAMU,aAAa,CAACR,UAAU,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAK,SAAS,EAAC,OAAO;IAAA,wBAClB;MAAK,SAAS,EAAC,WAAW;MAAC,KAAK,EAAE;QAAES,SAAS,EAAG,UAASb,WAAY;MAAM;IAAE;MAAA;MAAA;MAAA;IAAA,QAAO,eACpF;MAAK,SAAS,EAAC,aAAa;MAAC,KAAK,EAAE;QAAEa,SAAS,EAAG,UAASX,aAAc;MAAM;IAAE;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QACtF;AAEd,CAAC;AAAC,GAvBWH,KAAK;AAAA,KAALA,KAAK;AAgClBA,KAAK,CAACe,UAAU,GAAG;EAAEC,WAAW,EAAE;IAAEC,MAAM,EAAE;EAAw6B,CAAC;EAAE,GAAGjB,KAAK,CAACe;AAAW,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}