{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/React_Kabzda/src/ReactMemo/ReactMemo.stories.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import {useState} from \\\"react\\\";\\n\\n\\nexport default {\\n    title: 'React Memo',\\n\\n}\\n\\nexport const ReactMemo = () => {\\n\\n    const [count, setCount] = useState(0)\\n\\n    const [user, setUser] = useState(['Dimych', 'Valera', 'Julian'])\\n\\n    return (\\n        <>\\n            <Header count={count}/>\\n            <Table user={user} />\\n        </>\\n    )\\n}\\n\\ntype HeaderType = {\\n    count: number\\n    bla:(count:number)=>void\\n}\\n\\nexport const Header = (props: HeaderType) => {\\n\\n  const onclickHandler =() => {\\n     props.bla(props.count+1)\\n  }\\n\\n    return <div>\\n        <button onClick={onclickHandler}>+</button>\\n        {props.count}\\n    </div>\\n}\\n\\ntype TableType = {\\n    user:Array<string>\\n}\\nexport const Table = (props:TableType) => {\\n    return <div>\\n        {props.user.map((el)=>{\\n            return(\\n                <li>\\n                    {el}\\n                </li>\\n            )\\n        })}\\n    </div>\\n}\";\n// @ts-ignore\nvar __LOCATIONS_MAP__ = {\n  \"ReactMemo\": {\n    \"startLoc\": {\n      \"col\": 25,\n      \"line\": 9\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 21\n    },\n    \"startBody\": {\n      \"col\": 25,\n      \"line\": 9\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 21\n    }\n  },\n  \"Header\": {\n    \"startLoc\": {\n      \"col\": 22,\n      \"line\": 28\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 38\n    },\n    \"startBody\": {\n      \"col\": 22,\n      \"line\": 28\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 38\n    }\n  },\n  \"Table\": {\n    \"startLoc\": {\n      \"col\": 21,\n      \"line\": 43\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 53\n    },\n    \"startBody\": {\n      \"col\": 21,\n      \"line\": 43\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 53\n    }\n  }\n};\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'React Memo'\n};\nexport const ReactMemo = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const [user, setUser] = useState(['Dimych', 'Valera', 'Julian']);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      count: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ReactMemo, \"xG3SWfIYzXFuOocq1T9yrJyeMEo=\");\n_c = ReactMemo;\nexport const Header = props => {\n  const onclickHandler = () => {\n    props.bla(props.count + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onclickHandler,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), props.count]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n};\n_c2 = Header;\nexport const Table = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.user.map(el => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: el\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 12\n  }, this);\n};\n_c3 = Table;\nReactMemo.parameters = {\n  storySource: {\n    source: \"() => {\\n\\n    const [count, setCount] = useState(0)\\n\\n    const [user, setUser] = useState(['Dimych', 'Valera', 'Julian'])\\n\\n    return (\\n        <>\\n            <Header count={count}/>\\n            <Table user={user} />\\n        </>\\n    )\\n}\"\n  },\n  ...ReactMemo.parameters\n};\nHeader.parameters = {\n  storySource: {\n    source: \"(props: HeaderType) => {\\n\\n  const onclickHandler =() => {\\n     props.bla(props.count+1)\\n  }\\n\\n    return <div>\\n        <button onClick={onclickHandler}>+</button>\\n        {props.count}\\n    </div>\\n}\"\n  },\n  ...Header.parameters\n};\nTable.parameters = {\n  storySource: {\n    source: \"(props:TableType) => {\\n    return <div>\\n        {props.user.map((el)=>{\\n            return(\\n                <li>\\n                    {el}\\n                </li>\\n            )\\n        })}\\n    </div>\\n}\"\n  },\n  ...Table.parameters\n};\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ReactMemo\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Table\");\nexport const __namedExportsOrder = [\"ReactMemo\", \"Header\", \"Table\"];","map":{"version":3,"names":["__STORY__","__LOCATIONS_MAP__","useState","title","ReactMemo","count","setCount","user","setUser","Header","props","onclickHandler","bla","Table","map","el","parameters","storySource","source"],"sources":["/Users/viktoriakapinus/Documents/React_Kabzda/src/ReactMemo/ReactMemo.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import {useState} from \\\"react\\\";\\n\\n\\nexport default {\\n    title: 'React Memo',\\n\\n}\\n\\nexport const ReactMemo = () => {\\n\\n    const [count, setCount] = useState(0)\\n\\n    const [user, setUser] = useState(['Dimych', 'Valera', 'Julian'])\\n\\n    return (\\n        <>\\n            <Header count={count}/>\\n            <Table user={user} />\\n        </>\\n    )\\n}\\n\\ntype HeaderType = {\\n    count: number\\n    bla:(count:number)=>void\\n}\\n\\nexport const Header = (props: HeaderType) => {\\n\\n  const onclickHandler =() => {\\n     props.bla(props.count+1)\\n  }\\n\\n    return <div>\\n        <button onClick={onclickHandler}>+</button>\\n        {props.count}\\n    </div>\\n}\\n\\ntype TableType = {\\n    user:Array<string>\\n}\\nexport const Table = (props:TableType) => {\\n    return <div>\\n        {props.user.map((el)=>{\\n            return(\\n                <li>\\n                    {el}\\n                </li>\\n            )\\n        })}\\n    </div>\\n}\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"ReactMemo\":{\"startLoc\":{\"col\":25,\"line\":9},\"endLoc\":{\"col\":1,\"line\":21},\"startBody\":{\"col\":25,\"line\":9},\"endBody\":{\"col\":1,\"line\":21}},\"Header\":{\"startLoc\":{\"col\":22,\"line\":28},\"endLoc\":{\"col\":1,\"line\":38},\"startBody\":{\"col\":22,\"line\":28},\"endBody\":{\"col\":1,\"line\":38}},\"Table\":{\"startLoc\":{\"col\":21,\"line\":43},\"endLoc\":{\"col\":1,\"line\":53},\"startBody\":{\"col\":21,\"line\":43},\"endBody\":{\"col\":1,\"line\":53}}};\n    \nimport {useState} from \"react\";\n\n\nexport default {\n    title: 'React Memo',\n\n}\n\nexport const ReactMemo = () => {\n\n    const [count, setCount] = useState(0)\n\n    const [user, setUser] = useState(['Dimych', 'Valera', 'Julian'])\n\n    return (\n        <>\n            <Header count={count}/>\n            <Table user={user} />\n        </>\n    )\n};\n\ntype HeaderType = {\n    count: number\n    bla:(count:number)=>void\n}\n\nexport const Header = (props: HeaderType) => {\n\n  const onclickHandler =() => {\n     props.bla(props.count+1)\n  }\n\n    return <div>\n        <button onClick={onclickHandler}>+</button>\n        {props.count}\n    </div>\n};\n\ntype TableType = {\n    user:Array<string>\n}\nexport const Table = (props:TableType) => {\n    return <div>\n        {props.user.map((el)=>{\n            return(\n                <li>\n                    {el}\n                </li>\n            )\n        })}\n    </div>\n};\n\n\nReactMemo.parameters = { storySource: { source: \"() => {\\n\\n    const [count, setCount] = useState(0)\\n\\n    const [user, setUser] = useState(['Dimych', 'Valera', 'Julian'])\\n\\n    return (\\n        <>\\n            <Header count={count}/>\\n            <Table user={user} />\\n        </>\\n    )\\n}\" }, ...ReactMemo.parameters };\nHeader.parameters = { storySource: { source: \"(props: HeaderType) => {\\n\\n  const onclickHandler =() => {\\n     props.bla(props.count+1)\\n  }\\n\\n    return <div>\\n        <button onClick={onclickHandler}>+</button>\\n        {props.count}\\n    </div>\\n}\" }, ...Header.parameters };\nTable.parameters = { storySource: { source: \"(props:TableType) => {\\n    return <div>\\n        {props.user.map((el)=>{\\n            return(\\n                <li>\\n                    {el}\\n                </li>\\n            )\\n        })}\\n    </div>\\n}\" }, ...Table.parameters };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}