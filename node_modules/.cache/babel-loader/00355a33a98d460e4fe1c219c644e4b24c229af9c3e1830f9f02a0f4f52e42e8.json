{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/React_Kabzda/src/Colapsed/SelectedUseMemo.stories.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"\\n\\nimport React, {useState} from \\\"react\\\";\\nimport s from \\\"./three.module.css\\\";\\nimport {ItemsType, SelectedUseMemo} from \\\"./SelectedUseMemo\\\";\\n\\nexport default {\\n    title: 'ThreeOptionSelect',\\n    component: SelectedUseMemo\\n}\\n\\nexport type FilterValueType ='Belarus'|'Ukraine'|'Spain'\\n\\nexport const SelectedMemo = ()=>{\\n\\n    const [value,SetValue]=useState(2)\\n\\n\\n    const [items,SetItems]=useState<ItemsType[]>([\\n        {value:1,title:'Minsk', country:'Belarus',isDone:true},\\n        {value:2,title:'Brest', country:'Belarus',isDone:false},\\n        {value:3,title:'Grodno', country:'Belarus',isDone:true},\\n        {value:4,title:'Kiev',country:'Ukraine',isDone:false},\\n        {value:5,title:'Lvov',country:'Ukraine',isDone:true},\\n        {value:6,title:'Madrid',country:'Spain',isDone:false},\\n        {value:7,title:'Barcelona',country:'Spain',isDone:true}])\\n\\n\\n\\n\\n    const filterCity =()=> {\\n    SetItems(items.filter((el)=>el.country==='Belarus'&& el.isDone===true))\\n   }\\n\\n   const SelectedMemo=React.memo(SelectedUseMemo)\\n\\n\\n   const addCity =()=>{\\n        SetItems([...items,   {value:8,title:'Baranovchi',country:'Spain',isDone:true}])\\n   }\\n\\n            //\\n            // if(el.country==='Belarus'){items.filter((el)=>el.country==='Belarus')}\\n            // if(el.country==='Ukraine'){items.filter((el)=>el.country==='Ukraine')}\\n            // if(el.country==='Spain'){items.filter((el)=>el.country==='Spain')}\\n        return(\\n\\n            <SelectedMemo items ={items}\\n                             value={value}\\n                   filterCity={filterCity}\\n                             addCity={addCity}/>\\n\\n       )\\n}\\n\\n\\n\\n\";\n// @ts-ignore\nvar __LOCATIONS_MAP__ = {\n  \"SelectedMemo\": {\n    \"startLoc\": {\n      \"col\": 28,\n      \"line\": 14\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 54\n    },\n    \"startBody\": {\n      \"col\": 28,\n      \"line\": 14\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 54\n    }\n  }\n};\nimport React, { useState } from \"react\";\nimport { SelectedUseMemo } from \"./SelectedUseMemo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'ThreeOptionSelect',\n  component: SelectedUseMemo\n};\nexport const SelectedMemo = () => {\n  _s();\n  const [value, SetValue] = useState(2);\n  const [items, SetItems] = useState([{\n    value: 1,\n    title: 'Minsk',\n    country: 'Belarus',\n    isDone: true\n  }, {\n    value: 2,\n    title: 'Brest',\n    country: 'Belarus',\n    isDone: false\n  }, {\n    value: 3,\n    title: 'Grodno',\n    country: 'Belarus',\n    isDone: true\n  }, {\n    value: 4,\n    title: 'Kiev',\n    country: 'Ukraine',\n    isDone: false\n  }, {\n    value: 5,\n    title: 'Lvov',\n    country: 'Ukraine',\n    isDone: true\n  }, {\n    value: 6,\n    title: 'Madrid',\n    country: 'Spain',\n    isDone: false\n  }, {\n    value: 7,\n    title: 'Barcelona',\n    country: 'Spain',\n    isDone: true\n  }]);\n  const filterCity = () => {\n    SetItems(items.filter(el => el.country === 'Belarus' && el.isDone === true));\n  };\n  const SelectedMemo = /*#__PURE__*/React.memo(SelectedUseMemo);\n  const addCity = () => {\n    SetItems([...items, {\n      value: 8,\n      title: 'Baranovchi',\n      country: 'Spain',\n      isDone: true\n    }]);\n  };\n\n  //\n  // if(el.country==='Belarus'){items.filter((el)=>el.country==='Belarus')}\n  // if(el.country==='Ukraine'){items.filter((el)=>el.country==='Ukraine')}\n  // if(el.country==='Spain'){items.filter((el)=>el.country==='Spain')}\n  return /*#__PURE__*/_jsxDEV(SelectedMemo, {\n    items: items,\n    value: value,\n    filterCity: filterCity,\n    addCity: addCity\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 13\n  }, this);\n};\n_s(SelectedMemo, \"UHxMHRwAMCTAQ76rH7qPyAoSaAQ=\");\n_c = SelectedMemo;\nSelectedMemo.parameters = {\n  storySource: {\n    source: \"()=>{\\n\\n    const [value,SetValue]=useState(2)\\n\\n\\n    const [items,SetItems]=useState<ItemsType[]>([\\n        {value:1,title:'Minsk', country:'Belarus',isDone:true},\\n        {value:2,title:'Brest', country:'Belarus',isDone:false},\\n        {value:3,title:'Grodno', country:'Belarus',isDone:true},\\n        {value:4,title:'Kiev',country:'Ukraine',isDone:false},\\n        {value:5,title:'Lvov',country:'Ukraine',isDone:true},\\n        {value:6,title:'Madrid',country:'Spain',isDone:false},\\n        {value:7,title:'Barcelona',country:'Spain',isDone:true}])\\n\\n\\n\\n\\n    const filterCity =()=> {\\n    SetItems(items.filter((el)=>el.country==='Belarus'&& el.isDone===true))\\n   }\\n\\n   const SelectedMemo=React.memo(SelectedUseMemo)\\n\\n\\n   const addCity =()=>{\\n        SetItems([...items,   {value:8,title:'Baranovchi',country:'Spain',isDone:true}])\\n   }\\n\\n            //\\n            // if(el.country==='Belarus'){items.filter((el)=>el.country==='Belarus')}\\n            // if(el.country==='Ukraine'){items.filter((el)=>el.country==='Ukraine')}\\n            // if(el.country==='Spain'){items.filter((el)=>el.country==='Spain')}\\n        return(\\n\\n            <SelectedMemo items ={items}\\n                             value={value}\\n                   filterCity={filterCity}\\n                             addCity={addCity}/>\\n\\n       )\\n}\"\n  },\n  ...SelectedMemo.parameters\n};\nvar _c;\n$RefreshReg$(_c, \"SelectedMemo\");\nexport const __namedExportsOrder = [\"SelectedMemo\"];","map":{"version":3,"names":["__STORY__","__LOCATIONS_MAP__","React","useState","SelectedUseMemo","title","component","SelectedMemo","value","SetValue","items","SetItems","country","isDone","filterCity","filter","el","memo","addCity","parameters","storySource","source"],"sources":["/Users/viktoriakapinus/Documents/React_Kabzda/src/Colapsed/SelectedUseMemo.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"\\n\\nimport React, {useState} from \\\"react\\\";\\nimport s from \\\"./three.module.css\\\";\\nimport {ItemsType, SelectedUseMemo} from \\\"./SelectedUseMemo\\\";\\n\\nexport default {\\n    title: 'ThreeOptionSelect',\\n    component: SelectedUseMemo\\n}\\n\\nexport type FilterValueType ='Belarus'|'Ukraine'|'Spain'\\n\\nexport const SelectedMemo = ()=>{\\n\\n    const [value,SetValue]=useState(2)\\n\\n\\n    const [items,SetItems]=useState<ItemsType[]>([\\n        {value:1,title:'Minsk', country:'Belarus',isDone:true},\\n        {value:2,title:'Brest', country:'Belarus',isDone:false},\\n        {value:3,title:'Grodno', country:'Belarus',isDone:true},\\n        {value:4,title:'Kiev',country:'Ukraine',isDone:false},\\n        {value:5,title:'Lvov',country:'Ukraine',isDone:true},\\n        {value:6,title:'Madrid',country:'Spain',isDone:false},\\n        {value:7,title:'Barcelona',country:'Spain',isDone:true}])\\n\\n\\n\\n\\n    const filterCity =()=> {\\n    SetItems(items.filter((el)=>el.country==='Belarus'&& el.isDone===true))\\n   }\\n\\n   const SelectedMemo=React.memo(SelectedUseMemo)\\n\\n\\n   const addCity =()=>{\\n        SetItems([...items,   {value:8,title:'Baranovchi',country:'Spain',isDone:true}])\\n   }\\n\\n            //\\n            // if(el.country==='Belarus'){items.filter((el)=>el.country==='Belarus')}\\n            // if(el.country==='Ukraine'){items.filter((el)=>el.country==='Ukraine')}\\n            // if(el.country==='Spain'){items.filter((el)=>el.country==='Spain')}\\n        return(\\n\\n            <SelectedMemo items ={items}\\n                             value={value}\\n                   filterCity={filterCity}\\n                             addCity={addCity}/>\\n\\n       )\\n}\\n\\n\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"SelectedMemo\":{\"startLoc\":{\"col\":28,\"line\":14},\"endLoc\":{\"col\":1,\"line\":54},\"startBody\":{\"col\":28,\"line\":14},\"endBody\":{\"col\":1,\"line\":54}}};\n    \n\n\nimport React, {useState} from \"react\";\nimport s from \"./three.module.css\";\nimport {ItemsType, SelectedUseMemo} from \"./SelectedUseMemo\";\n\nexport default {\n    title: 'ThreeOptionSelect',\n    component: SelectedUseMemo\n}\n\nexport type FilterValueType ='Belarus'|'Ukraine'|'Spain'\n\nexport const SelectedMemo = ()=>{\n\n    const [value,SetValue]=useState(2)\n\n\n    const [items,SetItems]=useState<ItemsType[]>([\n        {value:1,title:'Minsk', country:'Belarus',isDone:true},\n        {value:2,title:'Brest', country:'Belarus',isDone:false},\n        {value:3,title:'Grodno', country:'Belarus',isDone:true},\n        {value:4,title:'Kiev',country:'Ukraine',isDone:false},\n        {value:5,title:'Lvov',country:'Ukraine',isDone:true},\n        {value:6,title:'Madrid',country:'Spain',isDone:false},\n        {value:7,title:'Barcelona',country:'Spain',isDone:true}])\n\n\n\n\n    const filterCity =()=> {\n    SetItems(items.filter((el)=>el.country==='Belarus'&& el.isDone===true))\n   }\n\n   const SelectedMemo=React.memo(SelectedUseMemo)\n\n\n   const addCity =()=>{\n        SetItems([...items,   {value:8,title:'Baranovchi',country:'Spain',isDone:true}])\n   }\n\n            //\n            // if(el.country==='Belarus'){items.filter((el)=>el.country==='Belarus')}\n            // if(el.country==='Ukraine'){items.filter((el)=>el.country==='Ukraine')}\n            // if(el.country==='Spain'){items.filter((el)=>el.country==='Spain')}\n        return(\n\n            <SelectedMemo items ={items}\n                             value={value}\n                   filterCity={filterCity}\n                             addCity={addCity}/>\n\n       )\n};\n\n\n\n\n\nSelectedMemo.parameters = { storySource: { source: \"()=>{\\n\\n    const [value,SetValue]=useState(2)\\n\\n\\n    const [items,SetItems]=useState<ItemsType[]>([\\n        {value:1,title:'Minsk', country:'Belarus',isDone:true},\\n        {value:2,title:'Brest', country:'Belarus',isDone:false},\\n        {value:3,title:'Grodno', country:'Belarus',isDone:true},\\n        {value:4,title:'Kiev',country:'Ukraine',isDone:false},\\n        {value:5,title:'Lvov',country:'Ukraine',isDone:true},\\n        {value:6,title:'Madrid',country:'Spain',isDone:false},\\n        {value:7,title:'Barcelona',country:'Spain',isDone:true}])\\n\\n\\n\\n\\n    const filterCity =()=> {\\n    SetItems(items.filter((el)=>el.country==='Belarus'&& el.isDone===true))\\n   }\\n\\n   const SelectedMemo=React.memo(SelectedUseMemo)\\n\\n\\n   const addCity =()=>{\\n        SetItems([...items,   {value:8,title:'Baranovchi',country:'Spain',isDone:true}])\\n   }\\n\\n            //\\n            // if(el.country==='Belarus'){items.filter((el)=>el.country==='Belarus')}\\n            // if(el.country==='Ukraine'){items.filter((el)=>el.country==='Ukraine')}\\n            // if(el.country==='Spain'){items.filter((el)=>el.country==='Spain')}\\n        return(\\n\\n            <SelectedMemo items ={items}\\n                             value={value}\\n                   filterCity={filterCity}\\n                             addCity={addCity}/>\\n\\n       )\\n}\" }, ...SelectedMemo.parameters };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}