{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/React_Kabzda/src/selected.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Selected = props => {\n  _s();\n  const [editMode, setEditMode] = useState(false);\n  const ChangeEditMode = () => {\n    setEditMode(!editMode);\n  };\n  const ChangeEnableSpan = e => {\n    props.changeEnableSpan(e.currentTarget.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n      value: props.items.map(el => el.title),\n      onBlur: ChangeEditMode,\n      autoFocus: true,\n      onChange: ChangeEnableSpan\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      onDoubleClick: ChangeEditMode,\n      children: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true);\n};\n_s(Selected, \"rVR9Tx2gSsa7LZkJIG7mlWuXVu0=\");\n_c = Selected;\nvar _c;\n$RefreshReg$(_c, \"Selected\");","map":{"version":3,"names":["useState","Selected","props","editMode","setEditMode","ChangeEditMode","ChangeEnableSpan","e","changeEnableSpan","currentTarget","value","items","map","el","title"],"sources":["/Users/viktoriakapinus/Documents/React_Kabzda/src/selected.tsx"],"sourcesContent":["import {ChangeEvent, useState} from \"react\";\n\ntype SelectedType = {\n    items:ItemType[]\n    changeEnableSpan: (e: string) => void\n    value:string\n}\n\ntype ItemType = {\n    title:string,\n    id:any\n}\n\n\nexport const Selected = (props:SelectedType)=>{\n\n    const [editMode, setEditMode] = useState(false)\n\n    const ChangeEditMode = () => {\n        setEditMode(!editMode)\n    }\n\n    const ChangeEnableSpan = (e: ChangeEvent<HTMLInputElement>) => {\n        props.changeEnableSpan(e.currentTarget.value)\n    }\n\n\n\n    return (\n\n        <> {editMode\n            ? <input value={props.items.map((el)=>el.title)} onBlur={ChangeEditMode} autoFocus onChange={ChangeEnableSpan}/>\n            : <span onDoubleClick={ChangeEditMode}>{props.value}</span>}\n        </>\n    );\n}"],"mappings":";;AAAA,SAAqBA,QAAQ,QAAO,OAAO;AAAC;AAAA;AAc5C,OAAO,MAAMC,QAAQ,GAAIC,KAAkB,IAAG;EAAA;EAE1C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMK,cAAc,GAAG,MAAM;IACzBD,WAAW,CAAC,CAACD,QAAQ,CAAC;EAC1B,CAAC;EAED,MAAMG,gBAAgB,GAAIC,CAAgC,IAAK;IAC3DL,KAAK,CAACM,gBAAgB,CAACD,CAAC,CAACE,aAAa,CAACC,KAAK,CAAC;EACjD,CAAC;EAID,oBAEI;IAAA,gBAAIP,QAAQ,gBACN;MAAO,KAAK,EAAED,KAAK,CAACS,KAAK,CAACC,GAAG,CAAEC,EAAE,IAAGA,EAAE,CAACC,KAAK,CAAE;MAAC,MAAM,EAAET,cAAe;MAAC,SAAS;MAAC,QAAQ,EAAEC;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAE,gBAC9G;MAAM,aAAa,EAAED,cAAe;MAAA,UAAEH,KAAK,CAACQ;IAAK;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA,gBAC5D;AAEX,CAAC;AAAA,GArBYT,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}