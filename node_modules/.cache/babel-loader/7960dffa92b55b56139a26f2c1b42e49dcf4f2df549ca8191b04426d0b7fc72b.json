{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/React_Kabzda/src/stories/Clock/clock.stories.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Clock() {\n  _s();\n  const [timerId, setTimerId] = useState(undefined);\n  const [date, setDate] = useState(new Date(Date.now()));\n  const [editMode, setEditMode] = useState(false);\n  const start = () => {\n    setTimerId(+setInterval(() => {\n      setDate(new Date());\n    }, 1000));\n    setEditMode(true);\n  };\n  const stop = () => {\n    // пишут студенты // поставить часы на паузу, обнулить ид таймера (timerId <- undefined)\n    clearInterval(timerId);\n    setEditMode(false);\n  };\n  let formatterTime = new Intl.DateTimeFormat(\"ru\", {\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\"\n  });\n  let formatterDate = new Intl.DateTimeFormat(\"ru\", {\n    day: \"numeric\",\n    month: \"numeric\",\n    year: \"numeric\"\n  });\n  let formatterWeekendDay = new Intl.DateTimeFormat(\"en\", {\n    weekday: \"long\"\n  });\n  let formatterMonth = new Intl.DateTimeFormat(\"en\", {\n    month: \"long\"\n  });\n  const stringTime = `${formatterTime.format(date)}` || /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 57\n  }, this); // часы24:минуты:секунды (01:02:03)/(23:02:03)/(24:00:00)/(00:00:01) // пишут студенты\n  const stringDate = `${formatterDate.format(date)}` || /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 57\n  }, this); // день.месяц.год (01.02.2022) // пишут студенты, варианты 01.02.0123/01.02.-123/01.02.12345 не рассматриваем\n\n  // день недели на английском, месяц на английском (https://learn.javascript.ru/intl#intl-datetimeformat)\n  const stringDay = `${formatterWeekendDay.format(date)}` || /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 61\n  }, this);\n  const stringMonth = `${formatterMonth.format(date)}` || /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 59\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: stringDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), \",\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: stringTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: editMode // пишут студенты // задизэйблить если таймер запущен\n        ,\n        onClick: start,\n        children: \"start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !editMode // пишут студенты // задизэйблить если таймер не запущен\n        ,\n        onClick: stop,\n        children: \"stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(Clock, \"aU0WbtnsEtQHxgbEvW1knkGpeoQ=\");\n_c = Clock;\nexport default Clock;\nvar _c;\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"names":["React","useState","Clock","timerId","setTimerId","undefined","date","setDate","Date","now","editMode","setEditMode","start","setInterval","stop","clearInterval","formatterTime","Intl","DateTimeFormat","hour","minute","second","formatterDate","day","month","year","formatterWeekendDay","weekday","formatterMonth","stringTime","format","stringDate","stringDay","stringMonth"],"sources":["/Users/viktoriakapinus/Documents/React_Kabzda/src/stories/Clock/clock.stories.tsx"],"sourcesContent":["import React, {useState} from \"react\";\n\nfunction Clock() {\n    const [timerId, setTimerId] = useState<number | undefined>(undefined)\n\n    const [date, setDate] = useState<Date>(new Date(( Date.now())))\n\n    const [editMode,setEditMode]=useState(false)\n\n    const start = () => {\n        setTimerId(+setInterval(() => {\n            setDate(new Date())\n        }, 1000))\n        setEditMode(true)\n    };\n\n\n\n\n    const stop = () => {\n        // пишут студенты // поставить часы на паузу, обнулить ид таймера (timerId <- undefined)\n        clearInterval(timerId);\n        setEditMode(false)\n\n    }\n\n\n\n    let formatterTime = new Intl.DateTimeFormat(\"ru\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        second: \"numeric\"\n    });\n\n    let formatterDate = new Intl.DateTimeFormat(\"ru\", {\n        day: \"numeric\",\n        month: \"numeric\",\n        year: \"numeric\",\n    });\n\n    let formatterWeekendDay = new Intl.DateTimeFormat(\"en\", {\n        weekday: \"long\",\n\n    });\n\n    let formatterMonth = new Intl.DateTimeFormat(\"en\", {\n        month: \"long\",\n\n    });\n\n    const stringTime = `${formatterTime.format(date)}`||<br/> // часы24:минуты:секунды (01:02:03)/(23:02:03)/(24:00:00)/(00:00:01) // пишут студенты\n    const stringDate = `${formatterDate.format(date)}`||<br/>  // день.месяц.год (01.02.2022) // пишут студенты, варианты 01.02.0123/01.02.-123/01.02.12345 не рассматриваем\n\n    // день недели на английском, месяц на английском (https://learn.javascript.ru/intl#intl-datetimeformat)\n    const stringDay =`${formatterWeekendDay.format(date)}`||<br/>\n    const stringMonth = `${formatterMonth.format(date)}`||<br/>\n\n    return (\n        <div >\n            <div\n\n\n\n            >\n                <span >{stringDay}</span>,{' '}\n                <span >\n                    <strong>{stringTime}</strong>\n                </span>\n            </div>\n\n           \n\n            <div >\n                <button\n\n                    disabled={editMode} // пишут студенты // задизэйблить если таймер запущен\n                    onClick={start}\n                >\n                    start\n                </button>\n                <button\n\n                    disabled={!editMode} // пишут студенты // задизэйблить если таймер не запущен\n                    onClick={stop}\n                >\n                    stop\n                </button>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Clock"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC;AAEtC,SAASC,KAAK,GAAG;EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGH,QAAQ,CAAqBI,SAAS,CAAC;EAErE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAO,IAAIO,IAAI,CAAGA,IAAI,CAACC,GAAG,EAAE,CAAE,CAAC;EAE/D,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAACV,QAAQ,CAAC,KAAK,CAAC;EAE5C,MAAMW,KAAK,GAAG,MAAM;IAChBR,UAAU,CAAC,CAACS,WAAW,CAAC,MAAM;MAC1BN,OAAO,CAAC,IAAIC,IAAI,EAAE,CAAC;IACvB,CAAC,EAAE,IAAI,CAAC,CAAC;IACTG,WAAW,CAAC,IAAI,CAAC;EACrB,CAAC;EAKD,MAAMG,IAAI,GAAG,MAAM;IACf;IACAC,aAAa,CAACZ,OAAO,CAAC;IACtBQ,WAAW,CAAC,KAAK,CAAC;EAEtB,CAAC;EAID,IAAIK,aAAa,GAAG,IAAIC,IAAI,CAACC,cAAc,CAAC,IAAI,EAAE;IAC9CC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE;EACZ,CAAC,CAAC;EAEF,IAAIC,aAAa,GAAG,IAAIL,IAAI,CAACC,cAAc,CAAC,IAAI,EAAE;IAC9CK,GAAG,EAAE,SAAS;IACdC,KAAK,EAAE,SAAS;IAChBC,IAAI,EAAE;EACV,CAAC,CAAC;EAEF,IAAIC,mBAAmB,GAAG,IAAIT,IAAI,CAACC,cAAc,CAAC,IAAI,EAAE;IACpDS,OAAO,EAAE;EAEb,CAAC,CAAC;EAEF,IAAIC,cAAc,GAAG,IAAIX,IAAI,CAACC,cAAc,CAAC,IAAI,EAAE;IAC/CM,KAAK,EAAE;EAEX,CAAC,CAAC;EAEF,MAAMK,UAAU,GAAI,GAAEb,aAAa,CAACc,MAAM,CAACxB,IAAI,CAAE,EAAC,iBAAE;IAAA;IAAA;IAAA;EAAA,QAAK,EAAC;EAC1D,MAAMyB,UAAU,GAAI,GAAET,aAAa,CAACQ,MAAM,CAACxB,IAAI,CAAE,EAAC,iBAAE;IAAA;IAAA;IAAA;EAAA,QAAK,EAAE;;EAE3D;EACA,MAAM0B,SAAS,GAAG,GAAEN,mBAAmB,CAACI,MAAM,CAACxB,IAAI,CAAE,EAAC,iBAAE;IAAA;IAAA;IAAA;EAAA,QAAK;EAC7D,MAAM2B,WAAW,GAAI,GAAEL,cAAc,CAACE,MAAM,CAACxB,IAAI,CAAE,EAAC,iBAAE;IAAA;IAAA;IAAA;EAAA,QAAK;EAE3D,oBACI;IAAA,wBACI;MAAA,wBAKI;QAAA,UAAQ0B;MAAS;QAAA;QAAA;QAAA;MAAA,QAAQ,OAAE,GAAG,eAC9B;QAAA,uBACI;UAAA,UAASH;QAAU;UAAA;UAAA;UAAA;QAAA;MAAU;QAAA;QAAA;QAAA;MAAA,QAC1B;IAAA;MAAA;MAAA;MAAA;IAAA,QACL,eAIN;MAAA,wBACI;QAEI,QAAQ,EAAEnB,QAAS,CAAC;QAAA;QACpB,OAAO,EAAEE,KAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGV,eACT;QAEI,QAAQ,EAAE,CAACF,QAAS,CAAC;QAAA;QACrB,OAAO,EAAEI,IAAK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGT;IAAA;MAAA;MAAA;MAAA;IAAA,QACP;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GAxFQZ,KAAK;AAAA,KAALA,KAAK;AA2Fd,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}