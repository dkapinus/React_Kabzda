{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/React_Kabzda/src/ReactMemo/ReactMemo.stories.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import React, {useCallback, useMemo} from 'react';\\nimport {useState} from \\\"react\\\";\\n\\n\\nexport default {\\n    title: 'React Memo',\\n\\n}\\n\\n\\n\\nexport const ReactMemo = () => {\\n\\n    const [count, setCount] = useState(0)\\n\\n    const [user, setUser] = useState(['Dimych', 'Valera', 'Julian'])\\n\\n    const MainRerender =useMemo(()=>{return user.filter((el)=>el.toLocaleLowerCase().indexOf('a')>-1)},[user])\\n\\n  \\n    const  addCount =()=> {\\n        setCount(count+1)\\n    }\\n\\n    const memorized=useCallback(()=>{ setUser([...user,'Marty'+' ' + Date()])},[user])\\n\\n    return (\\n\\n        <>\\n\\n            <button onClick={memorized}>Rerender user</button>\\n            <HeaderSecret count={count} />\\n            <TableSecret user={MainRerender} addCount={addCount} />\\n        </>\\n    )\\n}\\n\\n\\n\\ntype HeaderType = {\\n    count: number\\n\\n}\\n\\nexport const Header = (props: HeaderType) => {\\nconsole.log('bhhbh')\\n    return <div>\\n\\n        {props.count}\\n    </div>\\n}\\n\\ntype TableType = {\\n    user:Array<string>\\n    addCount:()=>void\\n}\\n\\nexport const Table = (props:TableType) => {\\n    console.log('users')\\n    return <div>\\n        <button onClick={()=>props.addCount()}>+</button>\\n        {props.user.map((el,index)=>{\\n            return(\\n                <li key={index}>\\n                    {el}\\n                </li>\\n            )\\n        })}\\n    </div>\\n}\\nconst  TableSecret=React.memo(Table)\\n\\nconst HeaderSecret=React.memo(Header)\\n\";\n// @ts-ignore\nvar __LOCATIONS_MAP__ = {\n  \"ReactMemo\": {\n    \"startLoc\": {\n      \"col\": 25,\n      \"line\": 12\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 36\n    },\n    \"startBody\": {\n      \"col\": 25,\n      \"line\": 12\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 36\n    }\n  },\n  \"Header\": {\n    \"startLoc\": {\n      \"col\": 22,\n      \"line\": 45\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 51\n    },\n    \"startBody\": {\n      \"col\": 22,\n      \"line\": 45\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 51\n    }\n  },\n  \"Table\": {\n    \"startLoc\": {\n      \"col\": 21,\n      \"line\": 58\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 70\n    },\n    \"startBody\": {\n      \"col\": 21,\n      \"line\": 58\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 70\n    }\n  }\n};\nimport React, { useCallback, useMemo } from 'react';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'React Memo'\n};\nexport const ReactMemo = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const [user, setUser] = useState(['Dimych', 'Valera', 'Julian']);\n  const MainRerender = useMemo(() => {\n    return user.filter(el => el.toLocaleLowerCase().indexOf('a') > -1);\n  }, [user]);\n  const addCount = () => {\n    setCount(count + 1);\n  };\n  const memorized = useCallback(() => {\n    setUser([...user, 'Marty' + ' ' + Date()]);\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: memorized,\n      children: \"Rerender user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HeaderSecret, {\n      count: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableSecret, {\n      user: MainRerender,\n      addCount: addCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ReactMemo, \"HaK3/zdgYALYM7fAR4nYexEJD7g=\");\n_c = ReactMemo;\nexport const Header = props => {\n  console.log('bhhbh');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n};\n_c2 = Header;\nexport const Table = props => {\n  console.log('users');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.addCount(),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), props.user.map((el, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: el\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 12\n  }, this);\n};\n_c3 = Table;\nconst TableSecret = /*#__PURE__*/React.memo(Table);\n_c4 = TableSecret;\nconst HeaderSecret = /*#__PURE__*/React.memo(Header);\n_c5 = HeaderSecret;\nReactMemo.parameters = {\n  storySource: {\n    source: \"() => {\\n\\n    const [count, setCount] = useState(0)\\n\\n    const [user, setUser] = useState(['Dimych', 'Valera', 'Julian'])\\n\\n    const MainRerender =useMemo(()=>{return user.filter((el)=>el.toLocaleLowerCase().indexOf('a')>-1)},[user])\\n\\n  \\n    const  addCount =()=> {\\n        setCount(count+1)\\n    }\\n\\n    const memorized=useCallback(()=>{ setUser([...user,'Marty'+' ' + Date()])},[user])\\n\\n    return (\\n\\n        <>\\n\\n            <button onClick={memorized}>Rerender user</button>\\n            <HeaderSecret count={count} />\\n            <TableSecret user={MainRerender} addCount={addCount} />\\n        </>\\n    )\\n}\"\n  },\n  ...ReactMemo.parameters\n};\nHeader.parameters = {\n  storySource: {\n    source: \"(props: HeaderType) => {\\nconsole.log('bhhbh')\\n    return <div>\\n\\n        {props.count}\\n    </div>\\n}\"\n  },\n  ...Header.parameters\n};\nTable.parameters = {\n  storySource: {\n    source: \"(props:TableType) => {\\n    console.log('users')\\n    return <div>\\n        <button onClick={()=>props.addCount()}>+</button>\\n        {props.user.map((el,index)=>{\\n            return(\\n                <li key={index}>\\n                    {el}\\n                </li>\\n            )\\n        })}\\n    </div>\\n}\"\n  },\n  ...Table.parameters\n};\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"ReactMemo\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Table\");\n$RefreshReg$(_c4, \"TableSecret\");\n$RefreshReg$(_c5, \"HeaderSecret\");\nexport const __namedExportsOrder = [\"ReactMemo\", \"Header\", \"Table\"];","map":{"version":3,"names":["__STORY__","__LOCATIONS_MAP__","React","useCallback","useMemo","useState","title","ReactMemo","count","setCount","user","setUser","MainRerender","filter","el","toLocaleLowerCase","indexOf","addCount","memorized","Date","Header","props","console","log","Table","map","index","TableSecret","memo","HeaderSecret","parameters","storySource","source"],"sources":["/Users/viktoriakapinus/Documents/React_Kabzda/src/ReactMemo/ReactMemo.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, {useCallback, useMemo} from 'react';\\nimport {useState} from \\\"react\\\";\\n\\n\\nexport default {\\n    title: 'React Memo',\\n\\n}\\n\\n\\n\\nexport const ReactMemo = () => {\\n\\n    const [count, setCount] = useState(0)\\n\\n    const [user, setUser] = useState(['Dimych', 'Valera', 'Julian'])\\n\\n    const MainRerender =useMemo(()=>{return user.filter((el)=>el.toLocaleLowerCase().indexOf('a')>-1)},[user])\\n\\n  \\n    const  addCount =()=> {\\n        setCount(count+1)\\n    }\\n\\n    const memorized=useCallback(()=>{ setUser([...user,'Marty'+' ' + Date()])},[user])\\n\\n    return (\\n\\n        <>\\n\\n            <button onClick={memorized}>Rerender user</button>\\n            <HeaderSecret count={count} />\\n            <TableSecret user={MainRerender} addCount={addCount} />\\n        </>\\n    )\\n}\\n\\n\\n\\ntype HeaderType = {\\n    count: number\\n\\n}\\n\\nexport const Header = (props: HeaderType) => {\\nconsole.log('bhhbh')\\n    return <div>\\n\\n        {props.count}\\n    </div>\\n}\\n\\ntype TableType = {\\n    user:Array<string>\\n    addCount:()=>void\\n}\\n\\nexport const Table = (props:TableType) => {\\n    console.log('users')\\n    return <div>\\n        <button onClick={()=>props.addCount()}>+</button>\\n        {props.user.map((el,index)=>{\\n            return(\\n                <li key={index}>\\n                    {el}\\n                </li>\\n            )\\n        })}\\n    </div>\\n}\\nconst  TableSecret=React.memo(Table)\\n\\nconst HeaderSecret=React.memo(Header)\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"ReactMemo\":{\"startLoc\":{\"col\":25,\"line\":12},\"endLoc\":{\"col\":1,\"line\":36},\"startBody\":{\"col\":25,\"line\":12},\"endBody\":{\"col\":1,\"line\":36}},\"Header\":{\"startLoc\":{\"col\":22,\"line\":45},\"endLoc\":{\"col\":1,\"line\":51},\"startBody\":{\"col\":22,\"line\":45},\"endBody\":{\"col\":1,\"line\":51}},\"Table\":{\"startLoc\":{\"col\":21,\"line\":58},\"endLoc\":{\"col\":1,\"line\":70},\"startBody\":{\"col\":21,\"line\":58},\"endBody\":{\"col\":1,\"line\":70}}};\n    \nimport React, {useCallback, useMemo} from 'react';\nimport {useState} from \"react\";\n\n\nexport default {\n    title: 'React Memo',\n\n}\n\n\n\nexport const ReactMemo = () => {\n\n    const [count, setCount] = useState(0)\n\n    const [user, setUser] = useState(['Dimych', 'Valera', 'Julian'])\n\n    const MainRerender =useMemo(()=>{return user.filter((el)=>el.toLocaleLowerCase().indexOf('a')>-1)},[user])\n\n  \n    const  addCount =()=> {\n        setCount(count+1)\n    }\n\n    const memorized=useCallback(()=>{ setUser([...user,'Marty'+' ' + Date()])},[user])\n\n    return (\n\n        <>\n\n            <button onClick={memorized}>Rerender user</button>\n            <HeaderSecret count={count} />\n            <TableSecret user={MainRerender} addCount={addCount} />\n        </>\n    )\n};\n\n\n\ntype HeaderType = {\n    count: number\n\n}\n\nexport const Header = (props: HeaderType) => {\nconsole.log('bhhbh')\n    return <div>\n\n        {props.count}\n    </div>\n};\n\ntype TableType = {\n    user:Array<string>\n    addCount:()=>void\n}\n\nexport const Table = (props:TableType) => {\n    console.log('users')\n    return <div>\n        <button onClick={()=>props.addCount()}>+</button>\n        {props.user.map((el,index)=>{\n            return(\n                <li key={index}>\n                    {el}\n                </li>\n            )\n        })}\n    </div>\n};const  TableSecret=React.memo(Table)\n\nconst HeaderSecret=React.memo(Header)\n\n\n\nReactMemo.parameters = { storySource: { source: \"() => {\\n\\n    const [count, setCount] = useState(0)\\n\\n    const [user, setUser] = useState(['Dimych', 'Valera', 'Julian'])\\n\\n    const MainRerender =useMemo(()=>{return user.filter((el)=>el.toLocaleLowerCase().indexOf('a')>-1)},[user])\\n\\n  \\n    const  addCount =()=> {\\n        setCount(count+1)\\n    }\\n\\n    const memorized=useCallback(()=>{ setUser([...user,'Marty'+' ' + Date()])},[user])\\n\\n    return (\\n\\n        <>\\n\\n            <button onClick={memorized}>Rerender user</button>\\n            <HeaderSecret count={count} />\\n            <TableSecret user={MainRerender} addCount={addCount} />\\n        </>\\n    )\\n}\" }, ...ReactMemo.parameters };\nHeader.parameters = { storySource: { source: \"(props: HeaderType) => {\\nconsole.log('bhhbh')\\n    return <div>\\n\\n        {props.count}\\n    </div>\\n}\" }, ...Header.parameters };\nTable.parameters = { storySource: { source: \"(props:TableType) => {\\n    console.log('users')\\n    return <div>\\n        <button onClick={()=>props.addCount()}>+</button>\\n        {props.user.map((el,index)=>{\\n            return(\\n                <li key={index}>\\n                    {el}\\n                </li>\\n            )\\n        })}\\n    </div>\\n}\" }, ...Table.parameters };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}