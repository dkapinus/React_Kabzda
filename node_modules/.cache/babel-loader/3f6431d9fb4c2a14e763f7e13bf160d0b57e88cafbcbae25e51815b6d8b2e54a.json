{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/React_Kabzda/src/stories/Clock/clock.stories.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Clock() {\n  _s();\n  const [timerId, setTimerId] = useState(undefined);\n  // for autotests // не менять // можно подсунуть в локалСторэдж нужную дату, чтоб увидеть как она отображается\n\n  const [show, setShow] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const start = () => {\n    setTimerId(+setInterval(() => {\n      setDate(new Date());\n    }, 1000));\n    setEditMode(true);\n  };\n  const stop = () => {\n    // пишут студенты // поставить часы на паузу, обнулить ид таймера (timerId <- undefined)\n    clearInterval(timerId);\n    setEditMode(false);\n  };\n  let formatterTime = new Intl.DateTimeFormat(\"ru\", {\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\"\n  });\n  let formatterDate = new Intl.DateTimeFormat(\"ru\", {\n    day: \"numeric\",\n    month: \"numeric\",\n    year: \"numeric\"\n  });\n  let formatterWeekendDay = new Intl.DateTimeFormat(\"en\", {\n    weekday: \"long\"\n  });\n  let formatterMonth = new Intl.DateTimeFormat(\"en\", {\n    month: \"long\"\n  });\n  const stringTime = `${formatterTime.format(date)}` || /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 57\n  }, this); // часы24:минуты:секунды (01:02:03)/(23:02:03)/(24:00:00)/(00:00:01) // пишут студенты\n  const stringDate = `${formatterDate.format(date)}` || /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 57\n  }, this); // день.месяц.год (01.02.2022) // пишут студенты, варианты 01.02.0123/01.02.-123/01.02.12345 не рассматриваем\n\n  // день недели на английском, месяц на английском (https://learn.javascript.ru/intl#intl-datetimeformat)\n  const stringDay = `${formatterWeekendDay.format(date)}` || /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 61\n  }, this);\n  const stringMonth = `${formatterMonth.format(date)}` || /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 59\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.clock,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: 'hw9-watch',\n      className: s.watch,\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: 'hw9-day',\n        children: stringDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), \",\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        id: 'hw9-time',\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: stringTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: 'hw9-more',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.more,\n        children: show ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: 'hw9-month',\n            children: stringMonth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), \",\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            id: 'hw9-date',\n            children: stringDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: 'hw9-button-start',\n        disabled: editMode // пишут студенты // задизэйблить если таймер запущен\n        ,\n        onClick: start,\n        children: \"start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !editMode // пишут студенты // задизэйблить если таймер не запущен\n        ,\n        onClick: stop,\n        children: \"stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(Clock, \"/TuUvli46mMYEE01TRB8WS6dRpA=\");\n_c = Clock;\nexport default Clock;\nvar _c;\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"names":["React","useState","Clock","timerId","setTimerId","undefined","show","setShow","editMode","setEditMode","start","setInterval","setDate","Date","stop","clearInterval","formatterTime","Intl","DateTimeFormat","hour","minute","second","formatterDate","day","month","year","formatterWeekendDay","weekday","formatterMonth","stringTime","format","date","stringDate","stringDay","stringMonth","s","clock","watch","onMouseEnter","onMouseLeave","more"],"sources":["/Users/viktoriakapinus/Documents/React_Kabzda/src/stories/Clock/clock.stories.tsx"],"sourcesContent":["import React, {useState} from \"react\";\n\nfunction Clock() {\n    const [timerId, setTimerId] = useState<number | undefined>(undefined)\n    // for autotests // не менять // можно подсунуть в локалСторэдж нужную дату, чтоб увидеть как она отображается\n\n    const [show, setShow] = useState<boolean>(false)\n    const [editMode,setEditMode]=useState(false)\n\n    const start = () => {\n        setTimerId(+setInterval(() => {\n            setDate(new Date())\n        }, 1000))\n        setEditMode(true)\n    };\n\n\n\n\n    const stop = () => {\n        // пишут студенты // поставить часы на паузу, обнулить ид таймера (timerId <- undefined)\n        clearInterval(timerId);\n        setEditMode(false)\n\n    }\n\n\n\n    let formatterTime = new Intl.DateTimeFormat(\"ru\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        second: \"numeric\"\n    });\n\n    let formatterDate = new Intl.DateTimeFormat(\"ru\", {\n        day: \"numeric\",\n        month: \"numeric\",\n        year: \"numeric\",\n    });\n\n    let formatterWeekendDay = new Intl.DateTimeFormat(\"en\", {\n        weekday: \"long\",\n\n    });\n\n    let formatterMonth = new Intl.DateTimeFormat(\"en\", {\n        month: \"long\",\n\n    });\n\n    const stringTime = `${formatterTime.format(date)}`||<br/> // часы24:минуты:секунды (01:02:03)/(23:02:03)/(24:00:00)/(00:00:01) // пишут студенты\n    const stringDate = `${formatterDate.format(date)}`||<br/>  // день.месяц.год (01.02.2022) // пишут студенты, варианты 01.02.0123/01.02.-123/01.02.12345 не рассматриваем\n\n    // день недели на английском, месяц на английском (https://learn.javascript.ru/intl#intl-datetimeformat)\n    const stringDay =`${formatterWeekendDay.format(date)}`||<br/>\n    const stringMonth = `${formatterMonth.format(date)}`||<br/>\n\n    return (\n        <div className={s.clock}>\n            <div\n                id={'hw9-watch'}\n                className={s.watch}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n            >\n                <span id={'hw9-day'}>{stringDay}</span>,{' '}\n                <span id={'hw9-time'}>\n                    <strong>{stringTime}</strong>\n                </span>\n            </div>\n\n            <div id={'hw9-more'}>\n                <div className={s.more}>\n                    {show ? (\n                        <>\n                            <span id={'hw9-month'}>{stringMonth}</span>,{' '}\n                            <span id={'hw9-date'}>{stringDate}</span>\n                        </>\n                    ) : (\n                        <>\n                            <br/>\n                        </>\n                    )}\n                </div>\n            </div>\n\n            <div >\n                <button\n                    id={'hw9-button-start'}\n                    disabled={editMode} // пишут студенты // задизэйблить если таймер запущен\n                    onClick={start}\n                >\n                    start\n                </button>\n                <button\n\n                    disabled={!editMode} // пишут студенты // задизэйблить если таймер не запущен\n                    onClick={stop}\n                >\n                    stop\n                </button>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Clock"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}