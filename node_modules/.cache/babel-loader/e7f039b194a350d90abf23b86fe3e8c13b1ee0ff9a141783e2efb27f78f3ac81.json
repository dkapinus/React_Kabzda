{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/React_Kabzda/src/Colapsed/SelectedUseMemo.stories.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"\\n\\nimport React, {useMemo, useState} from \\\"react\\\";\\nimport s from \\\"./three.module.css\\\";\\nimport {ItemsType, SelectedUseMemo} from \\\"./SelectedUseMemo\\\";\\n\\nexport default {\\n    title: 'ThreeOptionSelect',\\n    component: SelectedUseMemo\\n}\\n\\nexport type FilterValueType ='Belarus'|'Ukraine'|'Spain'|'All'\\n\\nexport const SelectedMemo = ()=>{\\n\\n    const [value,SetValue]=useState(2)\\n\\n\\n    const [items,SetItems]=useState<ItemsType[]>([\\n        {value:1,title:'Minsk', country:'Belarus',isDone:true},\\n        {value:2,title:'Brest', country:'Belarus',isDone:false},\\n        {value:3,title:'Grodno', country:'Belarus',isDone:true},\\n        {value:4,title:'Kiev',country:'Ukraine',isDone:false},\\n        {value:5,title:'Lvov',country:'Ukraine',isDone:true},\\n        {value:6,title:'Madrid',country:'Spain',isDone:false},\\n        {value:7,title:'Barcelona',country:'Spain',isDone:true},\\n        {value:8,title:'Malaga',country:'Spain',isDone:true},\\n    ])\\n\\n    const [nameButton,SetNameButton]=useState<FilterValueType>('All')\\n\\n    const filterCountry=(nameButton:FilterValueType)=> {\\n        SetNameButton(nameButton)\\n    }\\n\\n    const filter =()=> {\\n\\n        let bla=items\\n\\n        if(nameButton==='Belarus'){  bla=items.filter((el)=>el.country==='Belarus')}\\n         if(nameButton==='Ukraine'){ bla=items.filter((el)=>el.country==='Ukraine')}\\n         if(nameButton==='Spain'){ bla=items.filter((el)=>el.country==='Spain')}\\n\\n         return bla\\n}\\n\\n const [SuperCounter,SetSuperCounter]=useState(0)\\n\\n    const Counter =()=> {\\n        if(nameButton==='Belarus'){ SetSuperCounter(SuperCounter+1)}\\n    }\\n\\n        return(\\n\\n            <SelectedUseMemo items ={filter()}\\n                             value={value}\\n                             filterCountry={filterCountry}\\n                             Counter={Counter}\\n                             SuperCounter={SuperCounter}\\n                            />\\n\\n       )\\n}\\n\\n\\n\\n\";\n// @ts-ignore\nvar __LOCATIONS_MAP__ = {\n  \"SelectedMemo\": {\n    \"startLoc\": {\n      \"col\": 28,\n      \"line\": 14\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 63\n    },\n    \"startBody\": {\n      \"col\": 28,\n      \"line\": 14\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 63\n    }\n  }\n};\nimport React, { useState } from \"react\";\nimport { SelectedUseMemo } from \"./SelectedUseMemo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'ThreeOptionSelect',\n  component: SelectedUseMemo\n};\nexport const SelectedMemo = () => {\n  _s();\n  const [value, SetValue] = useState(2);\n  const [items, SetItems] = useState([{\n    value: 1,\n    title: 'Minsk',\n    country: 'Belarus',\n    isDone: true\n  }, {\n    value: 2,\n    title: 'Brest',\n    country: 'Belarus',\n    isDone: false\n  }, {\n    value: 3,\n    title: 'Grodno',\n    country: 'Belarus',\n    isDone: true\n  }, {\n    value: 4,\n    title: 'Kiev',\n    country: 'Ukraine',\n    isDone: false\n  }, {\n    value: 5,\n    title: 'Lvov',\n    country: 'Ukraine',\n    isDone: true\n  }, {\n    value: 6,\n    title: 'Madrid',\n    country: 'Spain',\n    isDone: false\n  }, {\n    value: 7,\n    title: 'Barcelona',\n    country: 'Spain',\n    isDone: true\n  }, {\n    value: 8,\n    title: 'Malaga',\n    country: 'Spain',\n    isDone: true\n  }]);\n  const [nameButton, SetNameButton] = useState('All');\n  const filterCountry = nameButton => {\n    SetNameButton(nameButton);\n  };\n  const filter = () => {\n    let bla = items;\n    if (nameButton === 'Belarus') {\n      bla = items.filter(el => el.country === 'Belarus');\n    }\n    if (nameButton === 'Ukraine') {\n      bla = items.filter(el => el.country === 'Ukraine');\n    }\n    if (nameButton === 'Spain') {\n      bla = items.filter(el => el.country === 'Spain');\n    }\n    return bla;\n  };\n  const [SuperCounter, SetSuperCounter] = useState(0);\n  const Counter = () => {\n    if (nameButton === 'Belarus') {\n      SetSuperCounter(SuperCounter + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SelectedUseMemo, {\n    items: filter(),\n    value: value,\n    filterCountry: filterCountry,\n    Counter: Counter,\n    SuperCounter: SuperCounter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 13\n  }, this);\n};\n_s(SelectedMemo, \"JpMOw3nRxnGm0CBTttfarpp5/2s=\");\n_c = SelectedMemo;\nSelectedMemo.parameters = {\n  storySource: {\n    source: \"()=>{\\n\\n    const [value,SetValue]=useState(2)\\n\\n\\n    const [items,SetItems]=useState<ItemsType[]>([\\n        {value:1,title:'Minsk', country:'Belarus',isDone:true},\\n        {value:2,title:'Brest', country:'Belarus',isDone:false},\\n        {value:3,title:'Grodno', country:'Belarus',isDone:true},\\n        {value:4,title:'Kiev',country:'Ukraine',isDone:false},\\n        {value:5,title:'Lvov',country:'Ukraine',isDone:true},\\n        {value:6,title:'Madrid',country:'Spain',isDone:false},\\n        {value:7,title:'Barcelona',country:'Spain',isDone:true},\\n        {value:8,title:'Malaga',country:'Spain',isDone:true},\\n    ])\\n\\n    const [nameButton,SetNameButton]=useState<FilterValueType>('All')\\n\\n    const filterCountry=(nameButton:FilterValueType)=> {\\n        SetNameButton(nameButton)\\n    }\\n\\n    const filter =()=> {\\n\\n        let bla=items\\n\\n        if(nameButton==='Belarus'){  bla=items.filter((el)=>el.country==='Belarus')}\\n         if(nameButton==='Ukraine'){ bla=items.filter((el)=>el.country==='Ukraine')}\\n         if(nameButton==='Spain'){ bla=items.filter((el)=>el.country==='Spain')}\\n\\n         return bla\\n}\\n\\n const [SuperCounter,SetSuperCounter]=useState(0)\\n\\n    const Counter =()=> {\\n        if(nameButton==='Belarus'){ SetSuperCounter(SuperCounter+1)}\\n    }\\n\\n        return(\\n\\n            <SelectedUseMemo items ={filter()}\\n                             value={value}\\n                             filterCountry={filterCountry}\\n                             Counter={Counter}\\n                             SuperCounter={SuperCounter}\\n                            />\\n\\n       )\\n}\"\n  },\n  ...SelectedMemo.parameters\n};\nvar _c;\n$RefreshReg$(_c, \"SelectedMemo\");\nexport const __namedExportsOrder = [\"SelectedMemo\"];","map":{"version":3,"names":["__STORY__","__LOCATIONS_MAP__","React","useState","SelectedUseMemo","title","component","SelectedMemo","value","SetValue","items","SetItems","country","isDone","nameButton","SetNameButton","filterCountry","filter","bla","el","SuperCounter","SetSuperCounter","Counter","parameters","storySource","source"],"sources":["/Users/viktoriakapinus/Documents/React_Kabzda/src/Colapsed/SelectedUseMemo.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"\\n\\nimport React, {useMemo, useState} from \\\"react\\\";\\nimport s from \\\"./three.module.css\\\";\\nimport {ItemsType, SelectedUseMemo} from \\\"./SelectedUseMemo\\\";\\n\\nexport default {\\n    title: 'ThreeOptionSelect',\\n    component: SelectedUseMemo\\n}\\n\\nexport type FilterValueType ='Belarus'|'Ukraine'|'Spain'|'All'\\n\\nexport const SelectedMemo = ()=>{\\n\\n    const [value,SetValue]=useState(2)\\n\\n\\n    const [items,SetItems]=useState<ItemsType[]>([\\n        {value:1,title:'Minsk', country:'Belarus',isDone:true},\\n        {value:2,title:'Brest', country:'Belarus',isDone:false},\\n        {value:3,title:'Grodno', country:'Belarus',isDone:true},\\n        {value:4,title:'Kiev',country:'Ukraine',isDone:false},\\n        {value:5,title:'Lvov',country:'Ukraine',isDone:true},\\n        {value:6,title:'Madrid',country:'Spain',isDone:false},\\n        {value:7,title:'Barcelona',country:'Spain',isDone:true},\\n        {value:8,title:'Malaga',country:'Spain',isDone:true},\\n    ])\\n\\n    const [nameButton,SetNameButton]=useState<FilterValueType>('All')\\n\\n    const filterCountry=(nameButton:FilterValueType)=> {\\n        SetNameButton(nameButton)\\n    }\\n\\n    const filter =()=> {\\n\\n        let bla=items\\n\\n        if(nameButton==='Belarus'){  bla=items.filter((el)=>el.country==='Belarus')}\\n         if(nameButton==='Ukraine'){ bla=items.filter((el)=>el.country==='Ukraine')}\\n         if(nameButton==='Spain'){ bla=items.filter((el)=>el.country==='Spain')}\\n\\n         return bla\\n}\\n\\n const [SuperCounter,SetSuperCounter]=useState(0)\\n\\n    const Counter =()=> {\\n        if(nameButton==='Belarus'){ SetSuperCounter(SuperCounter+1)}\\n    }\\n\\n        return(\\n\\n            <SelectedUseMemo items ={filter()}\\n                             value={value}\\n                             filterCountry={filterCountry}\\n                             Counter={Counter}\\n                             SuperCounter={SuperCounter}\\n                            />\\n\\n       )\\n}\\n\\n\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"SelectedMemo\":{\"startLoc\":{\"col\":28,\"line\":14},\"endLoc\":{\"col\":1,\"line\":63},\"startBody\":{\"col\":28,\"line\":14},\"endBody\":{\"col\":1,\"line\":63}}};\n    \n\n\nimport React, {useMemo, useState} from \"react\";\nimport s from \"./three.module.css\";\nimport {ItemsType, SelectedUseMemo} from \"./SelectedUseMemo\";\n\nexport default {\n    title: 'ThreeOptionSelect',\n    component: SelectedUseMemo\n}\n\nexport type FilterValueType ='Belarus'|'Ukraine'|'Spain'|'All'\n\nexport const SelectedMemo = ()=>{\n\n    const [value,SetValue]=useState(2)\n\n\n    const [items,SetItems]=useState<ItemsType[]>([\n        {value:1,title:'Minsk', country:'Belarus',isDone:true},\n        {value:2,title:'Brest', country:'Belarus',isDone:false},\n        {value:3,title:'Grodno', country:'Belarus',isDone:true},\n        {value:4,title:'Kiev',country:'Ukraine',isDone:false},\n        {value:5,title:'Lvov',country:'Ukraine',isDone:true},\n        {value:6,title:'Madrid',country:'Spain',isDone:false},\n        {value:7,title:'Barcelona',country:'Spain',isDone:true},\n        {value:8,title:'Malaga',country:'Spain',isDone:true},\n    ])\n\n    const [nameButton,SetNameButton]=useState<FilterValueType>('All')\n\n    const filterCountry=(nameButton:FilterValueType)=> {\n        SetNameButton(nameButton)\n    }\n\n    const filter =()=> {\n\n        let bla=items\n\n        if(nameButton==='Belarus'){  bla=items.filter((el)=>el.country==='Belarus')}\n         if(nameButton==='Ukraine'){ bla=items.filter((el)=>el.country==='Ukraine')}\n         if(nameButton==='Spain'){ bla=items.filter((el)=>el.country==='Spain')}\n\n         return bla\n}\n\n const [SuperCounter,SetSuperCounter]=useState(0)\n\n    const Counter =()=> {\n        if(nameButton==='Belarus'){ SetSuperCounter(SuperCounter+1)}\n    }\n\n        return(\n\n            <SelectedUseMemo items ={filter()}\n                             value={value}\n                             filterCountry={filterCountry}\n                             Counter={Counter}\n                             SuperCounter={SuperCounter}\n                            />\n\n       )\n};\n\n\n\n\n\nSelectedMemo.parameters = { storySource: { source: \"()=>{\\n\\n    const [value,SetValue]=useState(2)\\n\\n\\n    const [items,SetItems]=useState<ItemsType[]>([\\n        {value:1,title:'Minsk', country:'Belarus',isDone:true},\\n        {value:2,title:'Brest', country:'Belarus',isDone:false},\\n        {value:3,title:'Grodno', country:'Belarus',isDone:true},\\n        {value:4,title:'Kiev',country:'Ukraine',isDone:false},\\n        {value:5,title:'Lvov',country:'Ukraine',isDone:true},\\n        {value:6,title:'Madrid',country:'Spain',isDone:false},\\n        {value:7,title:'Barcelona',country:'Spain',isDone:true},\\n        {value:8,title:'Malaga',country:'Spain',isDone:true},\\n    ])\\n\\n    const [nameButton,SetNameButton]=useState<FilterValueType>('All')\\n\\n    const filterCountry=(nameButton:FilterValueType)=> {\\n        SetNameButton(nameButton)\\n    }\\n\\n    const filter =()=> {\\n\\n        let bla=items\\n\\n        if(nameButton==='Belarus'){  bla=items.filter((el)=>el.country==='Belarus')}\\n         if(nameButton==='Ukraine'){ bla=items.filter((el)=>el.country==='Ukraine')}\\n         if(nameButton==='Spain'){ bla=items.filter((el)=>el.country==='Spain')}\\n\\n         return bla\\n}\\n\\n const [SuperCounter,SetSuperCounter]=useState(0)\\n\\n    const Counter =()=> {\\n        if(nameButton==='Belarus'){ SetSuperCounter(SuperCounter+1)}\\n    }\\n\\n        return(\\n\\n            <SelectedUseMemo items ={filter()}\\n                             value={value}\\n                             filterCountry={filterCountry}\\n                             Counter={Counter}\\n                             SuperCounter={SuperCounter}\\n                            />\\n\\n       )\\n}\" }, ...SelectedMemo.parameters };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}