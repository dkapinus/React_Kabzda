{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/React_Kabzda/src/stories/Clock/clocl.stories.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import {Clock} from \\\"./clock\\\";\\nimport {AnalogClock} from \\\"./AnalogClock\\\";\\nimport {useEffect, useState} from \\\"react\\\";\\n\\n\\nexport default {\\n    title: 'Clock ',\\n\\n}\\n\\n\\nexport const   justClock = ()=> {\\n   \\n\\n    return (\\n        <>\\n            <Clock/>\\n\\n        </>\\n    )\\n\\n}\\n\\nexport const   Analog = ()=> {\\n\\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\\n\\n\\n    useEffect(() => {\\n\\n\\n        const intervalID = setInterval(() => {\\n            console.log('tick')\\n            setDate(new Date())\\n        }, 1000)\\n\\n        return ()=>clearInterval(intervalID)\\n\\n\\n    }, [])\\n\\n    return (\\n        <>\\n            <AnalogClock data={date}/>\\n\\n        </>\\n    )\\n\\n}\\n\\n\";\n// @ts-ignore\nvar __LOCATIONS_MAP__ = {\n  \"justClock\": {\n    \"startLoc\": {\n      \"col\": 27,\n      \"line\": 12\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 22\n    },\n    \"startBody\": {\n      \"col\": 27,\n      \"line\": 12\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 22\n    }\n  },\n  \"Analog\": {\n    \"startLoc\": {\n      \"col\": 24,\n      \"line\": 24\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 49\n    },\n    \"startBody\": {\n      \"col\": 24,\n      \"line\": 24\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 49\n    }\n  }\n};\nimport { Clock } from \"./clock\";\nimport { AnalogClock } from \"./AnalogClock\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'Clock '\n};\nexport const justClock = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Clock, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\nexport const Analog = () => {\n  _s();\n  const [date, setDate] = useState(new Date(Date.now()));\n  useEffect(() => {\n    const intervalID = setInterval(() => {\n      console.log('tick');\n      setDate(new Date());\n    }, 1000);\n    return () => clearInterval(intervalID);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AnalogClock, {\n      data: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Analog, \"ogCh04LpGKH3iDqlJhtxXNiG4lM=\");\n_c = Analog;\njustClock.parameters = {\n  storySource: {\n    source: \"()=> {\\n   \\n\\n    return (\\n        <>\\n            <Clock/>\\n\\n        </>\\n    )\\n\\n}\"\n  },\n  ...justClock.parameters\n};\nAnalog.parameters = {\n  storySource: {\n    source: \"()=> {\\n\\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\\n\\n\\n    useEffect(() => {\\n\\n\\n        const intervalID = setInterval(() => {\\n            console.log('tick')\\n            setDate(new Date())\\n        }, 1000)\\n\\n        return ()=>clearInterval(intervalID)\\n\\n\\n    }, [])\\n\\n    return (\\n        <>\\n            <AnalogClock data={date}/>\\n\\n        </>\\n    )\\n\\n}\"\n  },\n  ...Analog.parameters\n};\nvar _c;\n$RefreshReg$(_c, \"Analog\");\nexport const __namedExportsOrder = [\"justClock\", \"Analog\"];","map":{"version":3,"names":["__STORY__","__LOCATIONS_MAP__","Clock","AnalogClock","useEffect","useState","title","justClock","Analog","date","setDate","Date","now","intervalID","setInterval","console","log","clearInterval","parameters","storySource","source"],"sources":["/Users/viktoriakapinus/Documents/React_Kabzda/src/stories/Clock/clocl.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import {Clock} from \\\"./clock\\\";\\nimport {AnalogClock} from \\\"./AnalogClock\\\";\\nimport {useEffect, useState} from \\\"react\\\";\\n\\n\\nexport default {\\n    title: 'Clock ',\\n\\n}\\n\\n\\nexport const   justClock = ()=> {\\n   \\n\\n    return (\\n        <>\\n            <Clock/>\\n\\n        </>\\n    )\\n\\n}\\n\\nexport const   Analog = ()=> {\\n\\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\\n\\n\\n    useEffect(() => {\\n\\n\\n        const intervalID = setInterval(() => {\\n            console.log('tick')\\n            setDate(new Date())\\n        }, 1000)\\n\\n        return ()=>clearInterval(intervalID)\\n\\n\\n    }, [])\\n\\n    return (\\n        <>\\n            <AnalogClock data={date}/>\\n\\n        </>\\n    )\\n\\n}\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"justClock\":{\"startLoc\":{\"col\":27,\"line\":12},\"endLoc\":{\"col\":1,\"line\":22},\"startBody\":{\"col\":27,\"line\":12},\"endBody\":{\"col\":1,\"line\":22}},\"Analog\":{\"startLoc\":{\"col\":24,\"line\":24},\"endLoc\":{\"col\":1,\"line\":49},\"startBody\":{\"col\":24,\"line\":24},\"endBody\":{\"col\":1,\"line\":49}}};\n    \nimport {Clock} from \"./clock\";\nimport {AnalogClock} from \"./AnalogClock\";\nimport {useEffect, useState} from \"react\";\n\n\nexport default {\n    title: 'Clock ',\n\n}\n\n\nexport const   justClock = ()=> {\n   \n\n    return (\n        <>\n            <Clock/>\n\n        </>\n    )\n\n};\n\nexport const   Analog = ()=> {\n\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\n\n\n    useEffect(() => {\n\n\n        const intervalID = setInterval(() => {\n            console.log('tick')\n            setDate(new Date())\n        }, 1000)\n\n        return ()=>clearInterval(intervalID)\n\n\n    }, [])\n\n    return (\n        <>\n            <AnalogClock data={date}/>\n\n        </>\n    )\n\n};\n\n\n\njustClock.parameters = { storySource: { source: \"()=> {\\n   \\n\\n    return (\\n        <>\\n            <Clock/>\\n\\n        </>\\n    )\\n\\n}\" }, ...justClock.parameters };\nAnalog.parameters = { storySource: { source: \"()=> {\\n\\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\\n\\n\\n    useEffect(() => {\\n\\n\\n        const intervalID = setInterval(() => {\\n            console.log('tick')\\n            setDate(new Date())\\n        }, 1000)\\n\\n        return ()=>clearInterval(intervalID)\\n\\n\\n    }, [])\\n\\n    return (\\n        <>\\n            <AnalogClock data={date}/>\\n\\n        </>\\n    )\\n\\n}\" }, ...Analog.parameters };"],"mappings":";;AACI;AACA;AACA;AACA,IAAIA,SAAS,GAAG,stBAAstB;AACtuB;AACA,IAAIC,iBAAiB,GAAG;EAAC,WAAW,EAAC;IAAC,UAAU,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,QAAQ,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,WAAW,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,SAAS,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE;EAAC,CAAC;EAAC,QAAQ,EAAC;IAAC,UAAU,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,QAAQ,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,WAAW,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,SAAS,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE;EAAC;AAAC,CAAC;AAE9S,SAAQC,KAAK,QAAO,SAAS;AAC7B,SAAQC,WAAW,QAAO,eAAe;AACzC,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC;AAAA;AAG1C,eAAe;EACXC,KAAK,EAAE;AAEX,CAAC;AAGD,OAAO,MAAQC,SAAS,GAAG,MAAK;EAG5B,oBACI;IAAA,uBACI,QAAC,KAAK;MAAA;MAAA;MAAA;IAAA;EAAE,iBAET;AAGX,CAAC;AAED,OAAO,MAAQC,MAAM,GAAG,MAAK;EAAA;EAEzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAO,IAAIM,IAAI,CAAEA,IAAI,CAACC,GAAG,EAAE,CAAE,CAAC;EAG9DR,SAAS,CAAC,MAAM;IAGZ,MAAMS,UAAU,GAAGC,WAAW,CAAC,MAAM;MACjCC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBN,OAAO,CAAC,IAAIC,IAAI,EAAE,CAAC;IACvB,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAIM,aAAa,CAACJ,UAAU,CAAC;EAGxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAA,uBACI,QAAC,WAAW;MAAC,IAAI,EAAEJ;IAAK;MAAA;MAAA;MAAA;IAAA;EAAE,iBAE3B;AAGX,CAAC;AAAC,GAzBaD,MAAM;AAAA,KAANA,MAAM;AA6BrBD,SAAS,CAACW,UAAU,GAAG;EAAEC,WAAW,EAAE;IAAEC,MAAM,EAAE;EAA2F,CAAC;EAAE,GAAGb,SAAS,CAACW;AAAW,CAAC;AACvKV,MAAM,CAACU,UAAU,GAAG;EAAEC,WAAW,EAAE;IAAEC,MAAM,EAAE;EAAiZ,CAAC;EAAE,GAAGZ,MAAM,CAACU;AAAW,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}