{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/React_Kabzda/src/ReactMemo/ReactMemo.stories.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import React, {useCallback, useMemo} from 'react';\\nimport {useState} from \\\"react\\\";\\n\\n\\nexport default {\\n    title: 'React Memo',\\n\\n}\\n\\n\\n\\nexport const ReactMemo = () => {\\n\\n    const [count, setCount] = useState(0)\\n\\n    const [user, setUser] = useState(['Dimych', 'Valera', 'Julian'])\\n\\n    const MainRerender =useMemo(()=>{return user.filter((el)=>el.toLocaleLowerCase().indexOf('i')>-1)},[user])\\n\\n\\n    const  addCount =()=> {\\n        setCount(count+1)\\n    }\\n\\n    const memorized=useCallback(()=>{ setUser([...user,'Marty'+' ' + Date()])},[user])\\n\\n    return (\\n\\n        <>\\n\\n            <button onClick={memorized}>Rerender user</button>\\n        </>\\n    )\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\";\n// @ts-ignore\nvar __LOCATIONS_MAP__ = {\n  \"ReactMemo\": {\n    \"startLoc\": {\n      \"col\": 25,\n      \"line\": 12\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 34\n    },\n    \"startBody\": {\n      \"col\": 25,\n      \"line\": 12\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 34\n    }\n  }\n};\nimport React, { useCallback, useMemo } from 'react';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'React Memo'\n};\nexport const ReactMemo = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const [user, setUser] = useState(['Dimych', 'Valera', 'Julian']);\n  const MainRerender = useMemo(() => {\n    return user.filter(el => el.toLocaleLowerCase().indexOf('i') > -1);\n  }, [user]);\n  const addCount = () => {\n    setCount(count + 1);\n  };\n  const memorized = useCallback(() => {\n    setUser([...user, 'Marty' + ' ' + Date()]);\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: memorized,\n      children: \"Rerender user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(ReactMemo, \"HaK3/zdgYALYM7fAR4nYexEJD7g=\");\n_c = ReactMemo;\nReactMemo.parameters = {\n  storySource: {\n    source: \"() => {\\n\\n    const [count, setCount] = useState(0)\\n\\n    const [user, setUser] = useState(['Dimych', 'Valera', 'Julian'])\\n\\n    const MainRerender =useMemo(()=>{return user.filter((el)=>el.toLocaleLowerCase().indexOf('i')>-1)},[user])\\n\\n\\n    const  addCount =()=> {\\n        setCount(count+1)\\n    }\\n\\n    const memorized=useCallback(()=>{ setUser([...user,'Marty'+' ' + Date()])},[user])\\n\\n    return (\\n\\n        <>\\n\\n            <button onClick={memorized}>Rerender user</button>\\n        </>\\n    )\\n}\"\n  },\n  ...ReactMemo.parameters\n};\nvar _c;\n$RefreshReg$(_c, \"ReactMemo\");\nexport const __namedExportsOrder = [\"ReactMemo\"];","map":{"version":3,"names":["__STORY__","__LOCATIONS_MAP__","React","useCallback","useMemo","useState","title","ReactMemo","count","setCount","user","setUser","MainRerender","filter","el","toLocaleLowerCase","indexOf","addCount","memorized","Date","parameters","storySource","source"],"sources":["/Users/viktoriakapinus/Documents/React_Kabzda/src/ReactMemo/ReactMemo.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, {useCallback, useMemo} from 'react';\\nimport {useState} from \\\"react\\\";\\n\\n\\nexport default {\\n    title: 'React Memo',\\n\\n}\\n\\n\\n\\nexport const ReactMemo = () => {\\n\\n    const [count, setCount] = useState(0)\\n\\n    const [user, setUser] = useState(['Dimych', 'Valera', 'Julian'])\\n\\n    const MainRerender =useMemo(()=>{return user.filter((el)=>el.toLocaleLowerCase().indexOf('i')>-1)},[user])\\n\\n\\n    const  addCount =()=> {\\n        setCount(count+1)\\n    }\\n\\n    const memorized=useCallback(()=>{ setUser([...user,'Marty'+' ' + Date()])},[user])\\n\\n    return (\\n\\n        <>\\n\\n            <button onClick={memorized}>Rerender user</button>\\n        </>\\n    )\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"ReactMemo\":{\"startLoc\":{\"col\":25,\"line\":12},\"endLoc\":{\"col\":1,\"line\":34},\"startBody\":{\"col\":25,\"line\":12},\"endBody\":{\"col\":1,\"line\":34}}};\n    \nimport React, {useCallback, useMemo} from 'react';\nimport {useState} from \"react\";\n\n\nexport default {\n    title: 'React Memo',\n\n}\n\n\n\nexport const ReactMemo = () => {\n\n    const [count, setCount] = useState(0)\n\n    const [user, setUser] = useState(['Dimych', 'Valera', 'Julian'])\n\n    const MainRerender =useMemo(()=>{return user.filter((el)=>el.toLocaleLowerCase().indexOf('i')>-1)},[user])\n\n\n    const  addCount =()=> {\n        setCount(count+1)\n    }\n\n    const memorized=useCallback(()=>{ setUser([...user,'Marty'+' ' + Date()])},[user])\n\n    return (\n\n        <>\n\n            <button onClick={memorized}>Rerender user</button>\n        </>\n    )\n};\n\n\n\n\n\n\n\n\n\n\nReactMemo.parameters = { storySource: { source: \"() => {\\n\\n    const [count, setCount] = useState(0)\\n\\n    const [user, setUser] = useState(['Dimych', 'Valera', 'Julian'])\\n\\n    const MainRerender =useMemo(()=>{return user.filter((el)=>el.toLocaleLowerCase().indexOf('i')>-1)},[user])\\n\\n\\n    const  addCount =()=> {\\n        setCount(count+1)\\n    }\\n\\n    const memorized=useCallback(()=>{ setUser([...user,'Marty'+' ' + Date()])},[user])\\n\\n    return (\\n\\n        <>\\n\\n            <button onClick={memorized}>Rerender user</button>\\n        </>\\n    )\\n}\" }, ...ReactMemo.parameters };"],"mappings":";;AACI;AACA;AACA;AACA,IAAIA,SAAS,GAAG,isBAAisB;AACjtB;AACA,IAAIC,iBAAiB,GAAG;EAAC,WAAW,EAAC;IAAC,UAAU,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,QAAQ,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,WAAW,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,SAAS,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE;EAAC;AAAC,CAAC;AAEvK,OAAOC,KAAK,IAAGC,WAAW,EAAEC,OAAO,QAAO,OAAO;AACjD,SAAQC,QAAQ,QAAO,OAAO;AAAC;AAAA;AAG/B,eAAe;EACXC,KAAK,EAAE;AAEX,CAAC;AAID,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;EAE3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;EAEhE,MAAMO,YAAY,GAAER,OAAO,CAAC,MAAI;IAAC,OAAOM,IAAI,CAACG,MAAM,CAAEC,EAAE,IAAGA,EAAE,CAACC,iBAAiB,EAAE,CAACC,OAAO,CAAC,GAAG,CAAC,GAAC,CAAC,CAAC,CAAC;EAAA,CAAC,EAAC,CAACN,IAAI,CAAC,CAAC;EAG1G,MAAOO,QAAQ,GAAE,MAAK;IAClBR,QAAQ,CAACD,KAAK,GAAC,CAAC,CAAC;EACrB,CAAC;EAED,MAAMU,SAAS,GAACf,WAAW,CAAC,MAAI;IAAEQ,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAC,OAAO,GAAC,GAAG,GAAGS,IAAI,EAAE,CAAC,CAAC;EAAA,CAAC,EAAC,CAACT,IAAI,CAAC,CAAC;EAElF,oBAEI;IAAA,uBAEI;MAAQ,OAAO,EAAEQ,SAAU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAuB,iBACnD;AAEX,CAAC;AAAC,GAtBWX,SAAS;AAAA,KAATA,SAAS;AAiCtBA,SAAS,CAACa,UAAU,GAAG;EAAEC,WAAW,EAAE;IAAEC,MAAM,EAAE;EAAqgB,CAAC;EAAE,GAAGf,SAAS,CAACa;AAAW,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}