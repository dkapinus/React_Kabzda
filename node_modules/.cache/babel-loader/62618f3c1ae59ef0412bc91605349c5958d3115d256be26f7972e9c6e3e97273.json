{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/React_Kabzda/src/stories/clock.stories.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import React, {useEffect, useState} from \\\"react\\\";\\n\\nexport default {\\n    title: 'Clock ',\\n\\n}\\n\\n\\nexport const Clock = () => {\\n\\n\\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\\n\\n\\n\\n    useEffect( () => {\\n        setInterval(() => {\\n            setDate(new Date())\\n        }, 1000)\\n\\n    },[])\\n\\n\\n    let formatterTime = new Intl.DateTimeFormat(\\\"ru\\\", {\\n\\n        second:\\\"2-digit\\\"\\n    });\\n\\n\\n    const stringTime = `${formatterTime.format(date)}`\\n    return (\\n        <div>\\n             <span>\\n                   {date.getHours()}\\n                </span>\\n:\\n                <span>\\n                   {date.getMinutes()}\\n                </span>\\n            :\\n            <span>\\n                   {stringTime}\\n                </span>\\n\\n\\n        </div>\\n    )\\n}\\n\\n\\n\\n\\n\\n\\n\\n\";\n// @ts-ignore\nvar __LOCATIONS_MAP__ = {\n  \"Clock\": {\n    \"startLoc\": {\n      \"col\": 21,\n      \"line\": 9\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 48\n    },\n    \"startBody\": {\n      \"col\": 21,\n      \"line\": 9\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 48\n    }\n  }\n};\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'Clock '\n};\nexport const Clock = () => {\n  _s();\n  const [date, setDate] = useState(new Date(Date.now()));\n  useEffect(() => {\n    setInterval(() => {\n      setDate(new Date());\n    }, 1000);\n  }, []);\n  let formatterTime = new Intl.DateTimeFormat(\"ru\", {\n    second: \"2-digit\"\n  });\n  const stringTime = `${formatterTime.format(date)}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: date.getHours()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 14\n    }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: date.getMinutes()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: stringTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Clock, \"ogCh04LpGKH3iDqlJhtxXNiG4lM=\");\n_c = Clock;\nClock.parameters = {\n  storySource: {\n    source: \"() => {\\n\\n\\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\\n\\n\\n\\n    useEffect( () => {\\n        setInterval(() => {\\n            setDate(new Date())\\n        }, 1000)\\n\\n    },[])\\n\\n\\n    let formatterTime = new Intl.DateTimeFormat(\\\"ru\\\", {\\n\\n        second:\\\"2-digit\\\"\\n    });\\n\\n\\n    const stringTime = `${formatterTime.format(date)}`\\n    return (\\n        <div>\\n             <span>\\n                   {date.getHours()}\\n                </span>\\n:\\n                <span>\\n                   {date.getMinutes()}\\n                </span>\\n            :\\n            <span>\\n                   {stringTime}\\n                </span>\\n\\n\\n        </div>\\n    )\\n}\"\n  },\n  ...Clock.parameters\n};\nvar _c;\n$RefreshReg$(_c, \"Clock\");\nexport const __namedExportsOrder = [\"Clock\"];","map":{"version":3,"names":["__STORY__","__LOCATIONS_MAP__","React","useEffect","useState","title","Clock","date","setDate","Date","now","setInterval","formatterTime","Intl","DateTimeFormat","second","stringTime","format","getHours","getMinutes","parameters","storySource","source"],"sources":["/Users/viktoriakapinus/Documents/React_Kabzda/src/stories/clock.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, {useEffect, useState} from \\\"react\\\";\\n\\nexport default {\\n    title: 'Clock ',\\n\\n}\\n\\n\\nexport const Clock = () => {\\n\\n\\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\\n\\n\\n\\n    useEffect( () => {\\n        setInterval(() => {\\n            setDate(new Date())\\n        }, 1000)\\n\\n    },[])\\n\\n\\n    let formatterTime = new Intl.DateTimeFormat(\\\"ru\\\", {\\n\\n        second:\\\"2-digit\\\"\\n    });\\n\\n\\n    const stringTime = `${formatterTime.format(date)}`\\n    return (\\n        <div>\\n             <span>\\n                   {date.getHours()}\\n                </span>\\n:\\n                <span>\\n                   {date.getMinutes()}\\n                </span>\\n            :\\n            <span>\\n                   {stringTime}\\n                </span>\\n\\n\\n        </div>\\n    )\\n}\\n\\n\\n\\n\\n\\n\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Clock\":{\"startLoc\":{\"col\":21,\"line\":9},\"endLoc\":{\"col\":1,\"line\":48},\"startBody\":{\"col\":21,\"line\":9},\"endBody\":{\"col\":1,\"line\":48}}};\n    \nimport React, {useEffect, useState} from \"react\";\n\nexport default {\n    title: 'Clock ',\n\n}\n\n\nexport const Clock = () => {\n\n\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\n\n\n\n    useEffect( () => {\n        setInterval(() => {\n            setDate(new Date())\n        }, 1000)\n\n    },[])\n\n\n    let formatterTime = new Intl.DateTimeFormat(\"ru\", {\n\n        second:\"2-digit\"\n    });\n\n\n    const stringTime = `${formatterTime.format(date)}`\n    return (\n        <div>\n             <span>\n                   {date.getHours()}\n                </span>\n:\n                <span>\n                   {date.getMinutes()}\n                </span>\n            :\n            <span>\n                   {stringTime}\n                </span>\n\n\n        </div>\n    )\n};\n\n\n\n\n\n\n\n\n\nClock.parameters = { storySource: { source: \"() => {\\n\\n\\n    const [date, setDate] = useState<Date>(new Date((Date.now())))\\n\\n\\n\\n    useEffect( () => {\\n        setInterval(() => {\\n            setDate(new Date())\\n        }, 1000)\\n\\n    },[])\\n\\n\\n    let formatterTime = new Intl.DateTimeFormat(\\\"ru\\\", {\\n\\n        second:\\\"2-digit\\\"\\n    });\\n\\n\\n    const stringTime = `${formatterTime.format(date)}`\\n    return (\\n        <div>\\n             <span>\\n                   {date.getHours()}\\n                </span>\\n:\\n                <span>\\n                   {date.getMinutes()}\\n                </span>\\n            :\\n            <span>\\n                   {stringTime}\\n                </span>\\n\\n\\n        </div>\\n    )\\n}\" }, ...Clock.parameters };"],"mappings":";;AACI;AACA;AACA;AACA,IAAIA,SAAS,GAAG,m0BAAm0B;AACn1B;AACA,IAAIC,iBAAiB,GAAG;EAAC,OAAO,EAAC;IAAC,UAAU,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAC,CAAC;IAAC,QAAQ,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE,CAAC;IAAC,WAAW,EAAC;MAAC,KAAK,EAAC,EAAE;MAAC,MAAM,EAAC;IAAC,CAAC;IAAC,SAAS,EAAC;MAAC,KAAK,EAAC,CAAC;MAAC,MAAM,EAAC;IAAE;EAAC;AAAC,CAAC;AAEjK,OAAOC,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC;AAEjD,eAAe;EACXC,KAAK,EAAE;AAEX,CAAC;AAGD,OAAO,MAAMC,KAAK,GAAG,MAAM;EAAA;EAGvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAO,IAAIK,IAAI,CAAEA,IAAI,CAACC,GAAG,EAAE,CAAE,CAAC;EAI9DP,SAAS,CAAE,MAAM;IACbQ,WAAW,CAAC,MAAM;MACdH,OAAO,CAAC,IAAIC,IAAI,EAAE,CAAC;IACvB,CAAC,EAAE,IAAI,CAAC;EAEZ,CAAC,EAAC,EAAE,CAAC;EAGL,IAAIG,aAAa,GAAG,IAAIC,IAAI,CAACC,cAAc,CAAC,IAAI,EAAE;IAE9CC,MAAM,EAAC;EACX,CAAC,CAAC;EAGF,MAAMC,UAAU,GAAI,GAAEJ,aAAa,CAACK,MAAM,CAACV,IAAI,CAAE,EAAC;EAClD,oBACI;IAAA,wBACK;MAAA,UACOA,IAAI,CAACW,QAAQ;IAAE;MAAA;MAAA;MAAA;IAAA,QACZ,oBAEP;MAAA,UACIX,IAAI,CAACY,UAAU;IAAE;MAAA;MAAA;MAAA;IAAA,QACd,oBAEX;MAAA,UACQH;IAAU;MAAA;MAAA;MAAA;IAAA,QACP;EAAA;IAAA;IAAA;IAAA;EAAA,QAGT;AAEd,CAAC;AAAC,GAvCWV,KAAK;AAAA,KAALA,KAAK;AAiDlBA,KAAK,CAACc,UAAU,GAAG;EAAEC,WAAW,EAAE;IAAEC,MAAM,EAAE;EAAurB,CAAC;EAAE,GAAGhB,KAAK,CAACc;AAAW,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}